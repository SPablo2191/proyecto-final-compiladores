Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    operadorAr

Grammar

Rule 0     S' -> s
Rule 1     s -> PROGINI programa PROGFIN
Rule 2     programa -> incluir programa
Rule 3     programa -> cuerpo
Rule 4     cuerpo -> pin cuerpo
Rule 5     cuerpo -> definir cuerpo
Rule 6     cuerpo -> asignar cuerpo
Rule 7     cuerpo -> comLinea cuerpo
Rule 8     cuerpo -> comBloque cuerpo
Rule 9     cuerpo -> saltoLinea cuerpo
Rule 10    cuerpo -> reservadas cuerpo
Rule 11    cuerpo -> if cuerpo
Rule 12    cuerpo -> while cuerpo
Rule 13    cuerpo -> funcion cuerpo
Rule 14    cuerpo -> empty
Rule 15    pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
Rule 16    pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
Rule 17    incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea
Rule 18    definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
Rule 19    definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
Rule 20    definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
Rule 21    definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
Rule 22    definir -> DEFINIR inicioParentesis int variable finParentesis finLinea
Rule 23    definir -> DEFINIR inicioParentesis float variable finParentesis finLinea
Rule 24    definir -> DEFINIR inicioParentesis string variable finParentesis finLinea
Rule 25    definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea
Rule 26    varTipo -> int
Rule 27    varTipo -> float
Rule 28    varTipo -> string
Rule 29    varTipo -> bool
Rule 30    valor -> numero
Rule 31    valor -> comilla variable comilla
Rule 32    valor -> true
Rule 33    valor -> false
Rule 34    reservadas -> ADEL finFuncion
Rule 35    reservadas -> ATR finFuncion
Rule 36    reservadas -> IZQ finFuncion
Rule 37    reservadas -> DER finFuncion
Rule 38    reservadas -> ESP inicioParentesis numero finParentesis finLinea
Rule 39    reservadas -> STOP finFuncion
Rule 40    asignar -> variable asig valor finLinea
Rule 41    asignar -> variable asig variable finLinea
Rule 42    finFuncion -> inicioParentesis finParentesis finLinea
Rule 43    predicado -> false
Rule 44    predicado -> true
Rule 45    predicado -> valor operadorComp valor
Rule 46    predicado -> inicioParentesis predicado operadorLog predicado finParentesis
Rule 47    operadorLog -> AND
Rule 48    operadorLog -> OR
Rule 49    if -> IF predicado BEGIN cuerpo END else
Rule 50    else -> ELSE BEGIN cuerpo END
Rule 51    else -> empty
Rule 52    while -> WHILE predicado BEGIN cuerpo END
Rule 53    funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea
Rule 54    retorno -> dosPuntos varTipo
Rule 55    retorno -> empty
Rule 56    parametros -> varTipo dosPuntos variable
Rule 57    parametros -> varTipo dosPuntos variable coma parametros
Rule 58    parametros -> empty
Rule 59    empty -> <empty>

Terminals, with rules where they appear

ADEL                 : 34
AND                  : 47
ATR                  : 35
BEGIN                : 49 50 52
DEF                  : 15 16
DEFINIR              : 18 19 20 21 22 23 24 25
DER                  : 37
ELSE                 : 50
END                  : 49 50 52
ENT                  : 16
ESP                  : 38
FUNC                 : 53
IF                   : 49
INCLUIR              : 17
IZQ                  : 36
OR                   : 48
PIN                  : 15 16
PROGFIN              : 1
PROGINI              : 1
SAL                  : 15
STOP                 : 39
WHILE                : 52
asig                 : 18 19 20 21 40 41
bool                 : 21 25 29
comBloque            : 8
comLinea             : 7
coma                 : 57
comilla              : 17 17 20 20 31 31
dosPuntos            : 15 16 54 56 57
error                : 
false                : 33 43
finLinea             : 15 16 17 17 18 19 20 21 22 23 24 25 38 40 41 42 53
finParentesis        : 15 16 17 18 19 20 21 22 23 24 25 38 42 46 53
float                : 19 23 27
inicioParentesis     : 15 16 17 18 19 20 21 22 23 24 25 38 42 46 53
int                  : 18 22 26
numero               : 18 19 30 38
operadorAr           : 
operadorComp         : 45
saltoLinea           : 9
string               : 20 24 28
true                 : 32 44
variable             : 15 16 17 17 18 19 20 20 21 22 23 24 25 31 40 41 41 56 57

Nonterminals, with rules where they appear

asignar              : 6
cuerpo               : 3 4 5 6 7 8 9 10 11 12 13 49 50 52
definir              : 5
else                 : 49
empty                : 14 51 55 58
finFuncion           : 34 35 36 37 39
funcion              : 13
if                   : 11
incluir              : 2
operadorLog          : 46
parametros           : 53 57
pin                  : 4
predicado            : 46 46 49 52
programa             : 1 2
reservadas           : 10
retorno              : 53
s                    : 0
valor                : 21 40 45 45
varTipo              : 54 56 57
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . PROGINI programa PROGFIN

    PROGINI         shift and go to state 2

    s                              shift and go to state 1

state 1

    (0) S' -> s .



state 2

    (1) s -> PROGINI . programa PROGFIN
    (2) programa -> . incluir programa
    (3) programa -> . cuerpo
    (17) incluir -> . INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    INCLUIR         shift and go to state 6
    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)

    programa                       shift and go to state 3
    incluir                        shift and go to state 4
    cuerpo                         shift and go to state 5
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 3

    (1) s -> PROGINI programa . PROGFIN

    PROGFIN         shift and go to state 30


state 4

    (2) programa -> incluir . programa
    (2) programa -> . incluir programa
    (3) programa -> . cuerpo
    (17) incluir -> . INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    INCLUIR         shift and go to state 6
    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)

    incluir                        shift and go to state 4
    programa                       shift and go to state 31
    cuerpo                         shift and go to state 5
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 5

    (3) programa -> cuerpo .

    PROGFIN         reduce using rule 3 (programa -> cuerpo .)


state 6

    (17) incluir -> INCLUIR . inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea

    inicioParentesis shift and go to state 32


state 7

    (40) asignar -> variable . asig valor finLinea
    (41) asignar -> variable . asig variable finLinea

    asig            shift and go to state 33


state 8

    (4) cuerpo -> pin . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    pin                            shift and go to state 8
    cuerpo                         shift and go to state 34
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 9

    (5) cuerpo -> definir . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    definir                        shift and go to state 9
    cuerpo                         shift and go to state 35
    pin                            shift and go to state 8
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 10

    (6) cuerpo -> asignar . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    asignar                        shift and go to state 10
    cuerpo                         shift and go to state 36
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 11

    (7) cuerpo -> comLinea . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    cuerpo                         shift and go to state 37
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 12

    (8) cuerpo -> comBloque . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    cuerpo                         shift and go to state 38
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 13

    (9) cuerpo -> saltoLinea . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    cuerpo                         shift and go to state 39
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 14

    (10) cuerpo -> reservadas . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    reservadas                     shift and go to state 14
    cuerpo                         shift and go to state 40
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 15

    (11) cuerpo -> if . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    if                             shift and go to state 15
    cuerpo                         shift and go to state 41
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 16

    (12) cuerpo -> while . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    while                          shift and go to state 16
    cuerpo                         shift and go to state 42
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 17

    (13) cuerpo -> funcion . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    funcion                        shift and go to state 17
    cuerpo                         shift and go to state 43
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    empty                          shift and go to state 18

state 18

    (14) cuerpo -> empty .

    PROGFIN         reduce using rule 14 (cuerpo -> empty .)
    END             reduce using rule 14 (cuerpo -> empty .)


state 19

    (15) pin -> DEF . PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> DEF . PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea

    PIN             shift and go to state 44


state 20

    (18) definir -> DEFINIR . inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> DEFINIR . inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> DEFINIR . inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> DEFINIR . inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> DEFINIR . inicioParentesis int variable finParentesis finLinea
    (23) definir -> DEFINIR . inicioParentesis float variable finParentesis finLinea
    (24) definir -> DEFINIR . inicioParentesis string variable finParentesis finLinea
    (25) definir -> DEFINIR . inicioParentesis bool variable finParentesis finLinea

    inicioParentesis shift and go to state 45


state 21

    (34) reservadas -> ADEL . finFuncion
    (42) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 46

state 22

    (35) reservadas -> ATR . finFuncion
    (42) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 48

state 23

    (36) reservadas -> IZQ . finFuncion
    (42) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 49

state 24

    (37) reservadas -> DER . finFuncion
    (42) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 50

state 25

    (38) reservadas -> ESP . inicioParentesis numero finParentesis finLinea

    inicioParentesis shift and go to state 51


state 26

    (39) reservadas -> STOP . finFuncion
    (42) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 52

state 27

    (49) if -> IF . predicado BEGIN cuerpo END else
    (43) predicado -> . false
    (44) predicado -> . true
    (45) predicado -> . valor operadorComp valor
    (46) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (30) valor -> . numero
    (31) valor -> . comilla variable comilla
    (32) valor -> . true
    (33) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 53
    valor                          shift and go to state 56

state 28

    (52) while -> WHILE . predicado BEGIN cuerpo END
    (43) predicado -> . false
    (44) predicado -> . true
    (45) predicado -> . valor operadorComp valor
    (46) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (30) valor -> . numero
    (31) valor -> . comilla variable comilla
    (32) valor -> . true
    (33) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 60
    valor                          shift and go to state 56

state 29

    (53) funcion -> FUNC . inicioParentesis parametros finParentesis retorno finLinea

    inicioParentesis shift and go to state 61


state 30

    (1) s -> PROGINI programa PROGFIN .

    $end            reduce using rule 1 (s -> PROGINI programa PROGFIN .)


state 31

    (2) programa -> incluir programa .

    PROGFIN         reduce using rule 2 (programa -> incluir programa .)


state 32

    (17) incluir -> INCLUIR inicioParentesis . comilla variable finLinea variable comilla finParentesis finLinea

    comilla         shift and go to state 62


state 33

    (40) asignar -> variable asig . valor finLinea
    (41) asignar -> variable asig . variable finLinea
    (30) valor -> . numero
    (31) valor -> . comilla variable comilla
    (32) valor -> . true
    (33) valor -> . false

    variable        shift and go to state 63
    numero          shift and go to state 58
    comilla         shift and go to state 59
    true            shift and go to state 65
    false           shift and go to state 66

    valor                          shift and go to state 64

state 34

    (4) cuerpo -> pin cuerpo .

    PROGFIN         reduce using rule 4 (cuerpo -> pin cuerpo .)
    END             reduce using rule 4 (cuerpo -> pin cuerpo .)


state 35

    (5) cuerpo -> definir cuerpo .

    PROGFIN         reduce using rule 5 (cuerpo -> definir cuerpo .)
    END             reduce using rule 5 (cuerpo -> definir cuerpo .)


state 36

    (6) cuerpo -> asignar cuerpo .

    PROGFIN         reduce using rule 6 (cuerpo -> asignar cuerpo .)
    END             reduce using rule 6 (cuerpo -> asignar cuerpo .)


state 37

    (7) cuerpo -> comLinea cuerpo .

    PROGFIN         reduce using rule 7 (cuerpo -> comLinea cuerpo .)
    END             reduce using rule 7 (cuerpo -> comLinea cuerpo .)


state 38

    (8) cuerpo -> comBloque cuerpo .

    PROGFIN         reduce using rule 8 (cuerpo -> comBloque cuerpo .)
    END             reduce using rule 8 (cuerpo -> comBloque cuerpo .)


state 39

    (9) cuerpo -> saltoLinea cuerpo .

    PROGFIN         reduce using rule 9 (cuerpo -> saltoLinea cuerpo .)
    END             reduce using rule 9 (cuerpo -> saltoLinea cuerpo .)


state 40

    (10) cuerpo -> reservadas cuerpo .

    PROGFIN         reduce using rule 10 (cuerpo -> reservadas cuerpo .)
    END             reduce using rule 10 (cuerpo -> reservadas cuerpo .)


state 41

    (11) cuerpo -> if cuerpo .

    PROGFIN         reduce using rule 11 (cuerpo -> if cuerpo .)
    END             reduce using rule 11 (cuerpo -> if cuerpo .)


state 42

    (12) cuerpo -> while cuerpo .

    PROGFIN         reduce using rule 12 (cuerpo -> while cuerpo .)
    END             reduce using rule 12 (cuerpo -> while cuerpo .)


state 43

    (13) cuerpo -> funcion cuerpo .

    PROGFIN         reduce using rule 13 (cuerpo -> funcion cuerpo .)
    END             reduce using rule 13 (cuerpo -> funcion cuerpo .)


state 44

    (15) pin -> DEF PIN . inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> DEF PIN . inicioParentesis variable dosPuntos ENT finParentesis finLinea

    inicioParentesis shift and go to state 67


state 45

    (18) definir -> DEFINIR inicioParentesis . int variable asig numero finParentesis finLinea
    (19) definir -> DEFINIR inicioParentesis . float variable asig numero finParentesis finLinea
    (20) definir -> DEFINIR inicioParentesis . string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> DEFINIR inicioParentesis . bool variable asig valor finParentesis finLinea
    (22) definir -> DEFINIR inicioParentesis . int variable finParentesis finLinea
    (23) definir -> DEFINIR inicioParentesis . float variable finParentesis finLinea
    (24) definir -> DEFINIR inicioParentesis . string variable finParentesis finLinea
    (25) definir -> DEFINIR inicioParentesis . bool variable finParentesis finLinea

    int             shift and go to state 68
    float           shift and go to state 69
    string          shift and go to state 70
    bool            shift and go to state 71


state 46

    (34) reservadas -> ADEL finFuncion .

    comLinea        reduce using rule 34 (reservadas -> ADEL finFuncion .)
    comBloque       reduce using rule 34 (reservadas -> ADEL finFuncion .)
    saltoLinea      reduce using rule 34 (reservadas -> ADEL finFuncion .)
    DEF             reduce using rule 34 (reservadas -> ADEL finFuncion .)
    DEFINIR         reduce using rule 34 (reservadas -> ADEL finFuncion .)
    variable        reduce using rule 34 (reservadas -> ADEL finFuncion .)
    ADEL            reduce using rule 34 (reservadas -> ADEL finFuncion .)
    ATR             reduce using rule 34 (reservadas -> ADEL finFuncion .)
    IZQ             reduce using rule 34 (reservadas -> ADEL finFuncion .)
    DER             reduce using rule 34 (reservadas -> ADEL finFuncion .)
    ESP             reduce using rule 34 (reservadas -> ADEL finFuncion .)
    STOP            reduce using rule 34 (reservadas -> ADEL finFuncion .)
    IF              reduce using rule 34 (reservadas -> ADEL finFuncion .)
    WHILE           reduce using rule 34 (reservadas -> ADEL finFuncion .)
    FUNC            reduce using rule 34 (reservadas -> ADEL finFuncion .)
    PROGFIN         reduce using rule 34 (reservadas -> ADEL finFuncion .)
    END             reduce using rule 34 (reservadas -> ADEL finFuncion .)


state 47

    (42) finFuncion -> inicioParentesis . finParentesis finLinea

    finParentesis   shift and go to state 72


state 48

    (35) reservadas -> ATR finFuncion .

    comLinea        reduce using rule 35 (reservadas -> ATR finFuncion .)
    comBloque       reduce using rule 35 (reservadas -> ATR finFuncion .)
    saltoLinea      reduce using rule 35 (reservadas -> ATR finFuncion .)
    DEF             reduce using rule 35 (reservadas -> ATR finFuncion .)
    DEFINIR         reduce using rule 35 (reservadas -> ATR finFuncion .)
    variable        reduce using rule 35 (reservadas -> ATR finFuncion .)
    ADEL            reduce using rule 35 (reservadas -> ATR finFuncion .)
    ATR             reduce using rule 35 (reservadas -> ATR finFuncion .)
    IZQ             reduce using rule 35 (reservadas -> ATR finFuncion .)
    DER             reduce using rule 35 (reservadas -> ATR finFuncion .)
    ESP             reduce using rule 35 (reservadas -> ATR finFuncion .)
    STOP            reduce using rule 35 (reservadas -> ATR finFuncion .)
    IF              reduce using rule 35 (reservadas -> ATR finFuncion .)
    WHILE           reduce using rule 35 (reservadas -> ATR finFuncion .)
    FUNC            reduce using rule 35 (reservadas -> ATR finFuncion .)
    PROGFIN         reduce using rule 35 (reservadas -> ATR finFuncion .)
    END             reduce using rule 35 (reservadas -> ATR finFuncion .)


state 49

    (36) reservadas -> IZQ finFuncion .

    comLinea        reduce using rule 36 (reservadas -> IZQ finFuncion .)
    comBloque       reduce using rule 36 (reservadas -> IZQ finFuncion .)
    saltoLinea      reduce using rule 36 (reservadas -> IZQ finFuncion .)
    DEF             reduce using rule 36 (reservadas -> IZQ finFuncion .)
    DEFINIR         reduce using rule 36 (reservadas -> IZQ finFuncion .)
    variable        reduce using rule 36 (reservadas -> IZQ finFuncion .)
    ADEL            reduce using rule 36 (reservadas -> IZQ finFuncion .)
    ATR             reduce using rule 36 (reservadas -> IZQ finFuncion .)
    IZQ             reduce using rule 36 (reservadas -> IZQ finFuncion .)
    DER             reduce using rule 36 (reservadas -> IZQ finFuncion .)
    ESP             reduce using rule 36 (reservadas -> IZQ finFuncion .)
    STOP            reduce using rule 36 (reservadas -> IZQ finFuncion .)
    IF              reduce using rule 36 (reservadas -> IZQ finFuncion .)
    WHILE           reduce using rule 36 (reservadas -> IZQ finFuncion .)
    FUNC            reduce using rule 36 (reservadas -> IZQ finFuncion .)
    PROGFIN         reduce using rule 36 (reservadas -> IZQ finFuncion .)
    END             reduce using rule 36 (reservadas -> IZQ finFuncion .)


state 50

    (37) reservadas -> DER finFuncion .

    comLinea        reduce using rule 37 (reservadas -> DER finFuncion .)
    comBloque       reduce using rule 37 (reservadas -> DER finFuncion .)
    saltoLinea      reduce using rule 37 (reservadas -> DER finFuncion .)
    DEF             reduce using rule 37 (reservadas -> DER finFuncion .)
    DEFINIR         reduce using rule 37 (reservadas -> DER finFuncion .)
    variable        reduce using rule 37 (reservadas -> DER finFuncion .)
    ADEL            reduce using rule 37 (reservadas -> DER finFuncion .)
    ATR             reduce using rule 37 (reservadas -> DER finFuncion .)
    IZQ             reduce using rule 37 (reservadas -> DER finFuncion .)
    DER             reduce using rule 37 (reservadas -> DER finFuncion .)
    ESP             reduce using rule 37 (reservadas -> DER finFuncion .)
    STOP            reduce using rule 37 (reservadas -> DER finFuncion .)
    IF              reduce using rule 37 (reservadas -> DER finFuncion .)
    WHILE           reduce using rule 37 (reservadas -> DER finFuncion .)
    FUNC            reduce using rule 37 (reservadas -> DER finFuncion .)
    PROGFIN         reduce using rule 37 (reservadas -> DER finFuncion .)
    END             reduce using rule 37 (reservadas -> DER finFuncion .)


state 51

    (38) reservadas -> ESP inicioParentesis . numero finParentesis finLinea

    numero          shift and go to state 73


state 52

    (39) reservadas -> STOP finFuncion .

    comLinea        reduce using rule 39 (reservadas -> STOP finFuncion .)
    comBloque       reduce using rule 39 (reservadas -> STOP finFuncion .)
    saltoLinea      reduce using rule 39 (reservadas -> STOP finFuncion .)
    DEF             reduce using rule 39 (reservadas -> STOP finFuncion .)
    DEFINIR         reduce using rule 39 (reservadas -> STOP finFuncion .)
    variable        reduce using rule 39 (reservadas -> STOP finFuncion .)
    ADEL            reduce using rule 39 (reservadas -> STOP finFuncion .)
    ATR             reduce using rule 39 (reservadas -> STOP finFuncion .)
    IZQ             reduce using rule 39 (reservadas -> STOP finFuncion .)
    DER             reduce using rule 39 (reservadas -> STOP finFuncion .)
    ESP             reduce using rule 39 (reservadas -> STOP finFuncion .)
    STOP            reduce using rule 39 (reservadas -> STOP finFuncion .)
    IF              reduce using rule 39 (reservadas -> STOP finFuncion .)
    WHILE           reduce using rule 39 (reservadas -> STOP finFuncion .)
    FUNC            reduce using rule 39 (reservadas -> STOP finFuncion .)
    PROGFIN         reduce using rule 39 (reservadas -> STOP finFuncion .)
    END             reduce using rule 39 (reservadas -> STOP finFuncion .)


state 53

    (49) if -> IF predicado . BEGIN cuerpo END else

    BEGIN           shift and go to state 74


state 54

    (43) predicado -> false .
    (33) valor -> false .

    BEGIN           reduce using rule 43 (predicado -> false .)
    AND             reduce using rule 43 (predicado -> false .)
    OR              reduce using rule 43 (predicado -> false .)
    finParentesis   reduce using rule 43 (predicado -> false .)
    operadorComp    reduce using rule 33 (valor -> false .)


state 55

    (44) predicado -> true .
    (32) valor -> true .

    BEGIN           reduce using rule 44 (predicado -> true .)
    AND             reduce using rule 44 (predicado -> true .)
    OR              reduce using rule 44 (predicado -> true .)
    finParentesis   reduce using rule 44 (predicado -> true .)
    operadorComp    reduce using rule 32 (valor -> true .)


state 56

    (45) predicado -> valor . operadorComp valor

    operadorComp    shift and go to state 75


state 57

    (46) predicado -> inicioParentesis . predicado operadorLog predicado finParentesis
    (43) predicado -> . false
    (44) predicado -> . true
    (45) predicado -> . valor operadorComp valor
    (46) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (30) valor -> . numero
    (31) valor -> . comilla variable comilla
    (32) valor -> . true
    (33) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 76
    valor                          shift and go to state 56

state 58

    (30) valor -> numero .

    operadorComp    reduce using rule 30 (valor -> numero .)
    finLinea        reduce using rule 30 (valor -> numero .)
    BEGIN           reduce using rule 30 (valor -> numero .)
    AND             reduce using rule 30 (valor -> numero .)
    OR              reduce using rule 30 (valor -> numero .)
    finParentesis   reduce using rule 30 (valor -> numero .)


state 59

    (31) valor -> comilla . variable comilla

    variable        shift and go to state 77


state 60

    (52) while -> WHILE predicado . BEGIN cuerpo END

    BEGIN           shift and go to state 78


state 61

    (53) funcion -> FUNC inicioParentesis . parametros finParentesis retorno finLinea
    (56) parametros -> . varTipo dosPuntos variable
    (57) parametros -> . varTipo dosPuntos variable coma parametros
    (58) parametros -> . empty
    (26) varTipo -> . int
    (27) varTipo -> . float
    (28) varTipo -> . string
    (29) varTipo -> . bool
    (59) empty -> .

    int             shift and go to state 82
    float           shift and go to state 83
    string          shift and go to state 84
    bool            shift and go to state 85
    finParentesis   reduce using rule 59 (empty -> .)

    parametros                     shift and go to state 79
    varTipo                        shift and go to state 80
    empty                          shift and go to state 81

state 62

    (17) incluir -> INCLUIR inicioParentesis comilla . variable finLinea variable comilla finParentesis finLinea

    variable        shift and go to state 86


state 63

    (41) asignar -> variable asig variable . finLinea

    finLinea        shift and go to state 87


state 64

    (40) asignar -> variable asig valor . finLinea

    finLinea        shift and go to state 88


state 65

    (32) valor -> true .

    finLinea        reduce using rule 32 (valor -> true .)
    BEGIN           reduce using rule 32 (valor -> true .)
    AND             reduce using rule 32 (valor -> true .)
    OR              reduce using rule 32 (valor -> true .)
    finParentesis   reduce using rule 32 (valor -> true .)


state 66

    (33) valor -> false .

    finLinea        reduce using rule 33 (valor -> false .)
    BEGIN           reduce using rule 33 (valor -> false .)
    AND             reduce using rule 33 (valor -> false .)
    OR              reduce using rule 33 (valor -> false .)
    finParentesis   reduce using rule 33 (valor -> false .)


state 67

    (15) pin -> DEF PIN inicioParentesis . variable dosPuntos SAL finParentesis finLinea
    (16) pin -> DEF PIN inicioParentesis . variable dosPuntos ENT finParentesis finLinea

    variable        shift and go to state 89


state 68

    (18) definir -> DEFINIR inicioParentesis int . variable asig numero finParentesis finLinea
    (22) definir -> DEFINIR inicioParentesis int . variable finParentesis finLinea

    variable        shift and go to state 90


state 69

    (19) definir -> DEFINIR inicioParentesis float . variable asig numero finParentesis finLinea
    (23) definir -> DEFINIR inicioParentesis float . variable finParentesis finLinea

    variable        shift and go to state 91


state 70

    (20) definir -> DEFINIR inicioParentesis string . variable asig comilla variable comilla finParentesis finLinea
    (24) definir -> DEFINIR inicioParentesis string . variable finParentesis finLinea

    variable        shift and go to state 92


state 71

    (21) definir -> DEFINIR inicioParentesis bool . variable asig valor finParentesis finLinea
    (25) definir -> DEFINIR inicioParentesis bool . variable finParentesis finLinea

    variable        shift and go to state 93


state 72

    (42) finFuncion -> inicioParentesis finParentesis . finLinea

    finLinea        shift and go to state 94


state 73

    (38) reservadas -> ESP inicioParentesis numero . finParentesis finLinea

    finParentesis   shift and go to state 95


state 74

    (49) if -> IF predicado BEGIN . cuerpo END else
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    END             reduce using rule 59 (empty -> .)

    cuerpo                         shift and go to state 96
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 75

    (45) predicado -> valor operadorComp . valor
    (30) valor -> . numero
    (31) valor -> . comilla variable comilla
    (32) valor -> . true
    (33) valor -> . false

    numero          shift and go to state 58
    comilla         shift and go to state 59
    true            shift and go to state 65
    false           shift and go to state 66

    valor                          shift and go to state 97

state 76

    (46) predicado -> inicioParentesis predicado . operadorLog predicado finParentesis
    (47) operadorLog -> . AND
    (48) operadorLog -> . OR

    AND             shift and go to state 99
    OR              shift and go to state 100

    operadorLog                    shift and go to state 98

state 77

    (31) valor -> comilla variable . comilla

    comilla         shift and go to state 101


state 78

    (52) while -> WHILE predicado BEGIN . cuerpo END
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    END             reduce using rule 59 (empty -> .)

    cuerpo                         shift and go to state 102
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 79

    (53) funcion -> FUNC inicioParentesis parametros . finParentesis retorno finLinea

    finParentesis   shift and go to state 103


state 80

    (56) parametros -> varTipo . dosPuntos variable
    (57) parametros -> varTipo . dosPuntos variable coma parametros

    dosPuntos       shift and go to state 104


state 81

    (58) parametros -> empty .

    finParentesis   reduce using rule 58 (parametros -> empty .)


state 82

    (26) varTipo -> int .

    dosPuntos       reduce using rule 26 (varTipo -> int .)
    finLinea        reduce using rule 26 (varTipo -> int .)


state 83

    (27) varTipo -> float .

    dosPuntos       reduce using rule 27 (varTipo -> float .)
    finLinea        reduce using rule 27 (varTipo -> float .)


state 84

    (28) varTipo -> string .

    dosPuntos       reduce using rule 28 (varTipo -> string .)
    finLinea        reduce using rule 28 (varTipo -> string .)


state 85

    (29) varTipo -> bool .

    dosPuntos       reduce using rule 29 (varTipo -> bool .)
    finLinea        reduce using rule 29 (varTipo -> bool .)


state 86

    (17) incluir -> INCLUIR inicioParentesis comilla variable . finLinea variable comilla finParentesis finLinea

    finLinea        shift and go to state 105


state 87

    (41) asignar -> variable asig variable finLinea .

    comLinea        reduce using rule 41 (asignar -> variable asig variable finLinea .)
    comBloque       reduce using rule 41 (asignar -> variable asig variable finLinea .)
    saltoLinea      reduce using rule 41 (asignar -> variable asig variable finLinea .)
    DEF             reduce using rule 41 (asignar -> variable asig variable finLinea .)
    DEFINIR         reduce using rule 41 (asignar -> variable asig variable finLinea .)
    variable        reduce using rule 41 (asignar -> variable asig variable finLinea .)
    ADEL            reduce using rule 41 (asignar -> variable asig variable finLinea .)
    ATR             reduce using rule 41 (asignar -> variable asig variable finLinea .)
    IZQ             reduce using rule 41 (asignar -> variable asig variable finLinea .)
    DER             reduce using rule 41 (asignar -> variable asig variable finLinea .)
    ESP             reduce using rule 41 (asignar -> variable asig variable finLinea .)
    STOP            reduce using rule 41 (asignar -> variable asig variable finLinea .)
    IF              reduce using rule 41 (asignar -> variable asig variable finLinea .)
    WHILE           reduce using rule 41 (asignar -> variable asig variable finLinea .)
    FUNC            reduce using rule 41 (asignar -> variable asig variable finLinea .)
    PROGFIN         reduce using rule 41 (asignar -> variable asig variable finLinea .)
    END             reduce using rule 41 (asignar -> variable asig variable finLinea .)


state 88

    (40) asignar -> variable asig valor finLinea .

    comLinea        reduce using rule 40 (asignar -> variable asig valor finLinea .)
    comBloque       reduce using rule 40 (asignar -> variable asig valor finLinea .)
    saltoLinea      reduce using rule 40 (asignar -> variable asig valor finLinea .)
    DEF             reduce using rule 40 (asignar -> variable asig valor finLinea .)
    DEFINIR         reduce using rule 40 (asignar -> variable asig valor finLinea .)
    variable        reduce using rule 40 (asignar -> variable asig valor finLinea .)
    ADEL            reduce using rule 40 (asignar -> variable asig valor finLinea .)
    ATR             reduce using rule 40 (asignar -> variable asig valor finLinea .)
    IZQ             reduce using rule 40 (asignar -> variable asig valor finLinea .)
    DER             reduce using rule 40 (asignar -> variable asig valor finLinea .)
    ESP             reduce using rule 40 (asignar -> variable asig valor finLinea .)
    STOP            reduce using rule 40 (asignar -> variable asig valor finLinea .)
    IF              reduce using rule 40 (asignar -> variable asig valor finLinea .)
    WHILE           reduce using rule 40 (asignar -> variable asig valor finLinea .)
    FUNC            reduce using rule 40 (asignar -> variable asig valor finLinea .)
    PROGFIN         reduce using rule 40 (asignar -> variable asig valor finLinea .)
    END             reduce using rule 40 (asignar -> variable asig valor finLinea .)


state 89

    (15) pin -> DEF PIN inicioParentesis variable . dosPuntos SAL finParentesis finLinea
    (16) pin -> DEF PIN inicioParentesis variable . dosPuntos ENT finParentesis finLinea

    dosPuntos       shift and go to state 106


state 90

    (18) definir -> DEFINIR inicioParentesis int variable . asig numero finParentesis finLinea
    (22) definir -> DEFINIR inicioParentesis int variable . finParentesis finLinea

    asig            shift and go to state 107
    finParentesis   shift and go to state 108


state 91

    (19) definir -> DEFINIR inicioParentesis float variable . asig numero finParentesis finLinea
    (23) definir -> DEFINIR inicioParentesis float variable . finParentesis finLinea

    asig            shift and go to state 109
    finParentesis   shift and go to state 110


state 92

    (20) definir -> DEFINIR inicioParentesis string variable . asig comilla variable comilla finParentesis finLinea
    (24) definir -> DEFINIR inicioParentesis string variable . finParentesis finLinea

    asig            shift and go to state 111
    finParentesis   shift and go to state 112


state 93

    (21) definir -> DEFINIR inicioParentesis bool variable . asig valor finParentesis finLinea
    (25) definir -> DEFINIR inicioParentesis bool variable . finParentesis finLinea

    asig            shift and go to state 113
    finParentesis   shift and go to state 114


state 94

    (42) finFuncion -> inicioParentesis finParentesis finLinea .

    comLinea        reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    comBloque       reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    saltoLinea      reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    DEF             reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    DEFINIR         reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    variable        reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    ADEL            reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    ATR             reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    IZQ             reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    DER             reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    ESP             reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    STOP            reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    IF              reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    WHILE           reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    FUNC            reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    PROGFIN         reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)
    END             reduce using rule 42 (finFuncion -> inicioParentesis finParentesis finLinea .)


state 95

    (38) reservadas -> ESP inicioParentesis numero finParentesis . finLinea

    finLinea        shift and go to state 115


state 96

    (49) if -> IF predicado BEGIN cuerpo . END else

    END             shift and go to state 116


state 97

    (45) predicado -> valor operadorComp valor .

    BEGIN           reduce using rule 45 (predicado -> valor operadorComp valor .)
    AND             reduce using rule 45 (predicado -> valor operadorComp valor .)
    OR              reduce using rule 45 (predicado -> valor operadorComp valor .)
    finParentesis   reduce using rule 45 (predicado -> valor operadorComp valor .)


state 98

    (46) predicado -> inicioParentesis predicado operadorLog . predicado finParentesis
    (43) predicado -> . false
    (44) predicado -> . true
    (45) predicado -> . valor operadorComp valor
    (46) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (30) valor -> . numero
    (31) valor -> . comilla variable comilla
    (32) valor -> . true
    (33) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 117
    valor                          shift and go to state 56

state 99

    (47) operadorLog -> AND .

    false           reduce using rule 47 (operadorLog -> AND .)
    true            reduce using rule 47 (operadorLog -> AND .)
    inicioParentesis reduce using rule 47 (operadorLog -> AND .)
    numero          reduce using rule 47 (operadorLog -> AND .)
    comilla         reduce using rule 47 (operadorLog -> AND .)


state 100

    (48) operadorLog -> OR .

    false           reduce using rule 48 (operadorLog -> OR .)
    true            reduce using rule 48 (operadorLog -> OR .)
    inicioParentesis reduce using rule 48 (operadorLog -> OR .)
    numero          reduce using rule 48 (operadorLog -> OR .)
    comilla         reduce using rule 48 (operadorLog -> OR .)


state 101

    (31) valor -> comilla variable comilla .

    operadorComp    reduce using rule 31 (valor -> comilla variable comilla .)
    finLinea        reduce using rule 31 (valor -> comilla variable comilla .)
    BEGIN           reduce using rule 31 (valor -> comilla variable comilla .)
    AND             reduce using rule 31 (valor -> comilla variable comilla .)
    OR              reduce using rule 31 (valor -> comilla variable comilla .)
    finParentesis   reduce using rule 31 (valor -> comilla variable comilla .)


state 102

    (52) while -> WHILE predicado BEGIN cuerpo . END

    END             shift and go to state 118


state 103

    (53) funcion -> FUNC inicioParentesis parametros finParentesis . retorno finLinea
    (54) retorno -> . dosPuntos varTipo
    (55) retorno -> . empty
    (59) empty -> .

    dosPuntos       shift and go to state 120
    finLinea        reduce using rule 59 (empty -> .)

    retorno                        shift and go to state 119
    empty                          shift and go to state 121

state 104

    (56) parametros -> varTipo dosPuntos . variable
    (57) parametros -> varTipo dosPuntos . variable coma parametros

    variable        shift and go to state 122


state 105

    (17) incluir -> INCLUIR inicioParentesis comilla variable finLinea . variable comilla finParentesis finLinea

    variable        shift and go to state 123


state 106

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos . SAL finParentesis finLinea
    (16) pin -> DEF PIN inicioParentesis variable dosPuntos . ENT finParentesis finLinea

    SAL             shift and go to state 124
    ENT             shift and go to state 125


state 107

    (18) definir -> DEFINIR inicioParentesis int variable asig . numero finParentesis finLinea

    numero          shift and go to state 126


state 108

    (22) definir -> DEFINIR inicioParentesis int variable finParentesis . finLinea

    finLinea        shift and go to state 127


state 109

    (19) definir -> DEFINIR inicioParentesis float variable asig . numero finParentesis finLinea

    numero          shift and go to state 128


state 110

    (23) definir -> DEFINIR inicioParentesis float variable finParentesis . finLinea

    finLinea        shift and go to state 129


state 111

    (20) definir -> DEFINIR inicioParentesis string variable asig . comilla variable comilla finParentesis finLinea

    comilla         shift and go to state 130


state 112

    (24) definir -> DEFINIR inicioParentesis string variable finParentesis . finLinea

    finLinea        shift and go to state 131


state 113

    (21) definir -> DEFINIR inicioParentesis bool variable asig . valor finParentesis finLinea
    (30) valor -> . numero
    (31) valor -> . comilla variable comilla
    (32) valor -> . true
    (33) valor -> . false

    numero          shift and go to state 58
    comilla         shift and go to state 59
    true            shift and go to state 65
    false           shift and go to state 66

    valor                          shift and go to state 132

state 114

    (25) definir -> DEFINIR inicioParentesis bool variable finParentesis . finLinea

    finLinea        shift and go to state 133


state 115

    (38) reservadas -> ESP inicioParentesis numero finParentesis finLinea .

    comLinea        reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    comBloque       reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    saltoLinea      reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    DEF             reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    DEFINIR         reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    variable        reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    ADEL            reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    ATR             reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    IZQ             reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    DER             reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    ESP             reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    STOP            reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    IF              reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    WHILE           reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    FUNC            reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    PROGFIN         reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    END             reduce using rule 38 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)


state 116

    (49) if -> IF predicado BEGIN cuerpo END . else
    (50) else -> . ELSE BEGIN cuerpo END
    (51) else -> . empty
    (59) empty -> .

    ELSE            shift and go to state 135
    comLinea        reduce using rule 59 (empty -> .)
    comBloque       reduce using rule 59 (empty -> .)
    saltoLinea      reduce using rule 59 (empty -> .)
    DEF             reduce using rule 59 (empty -> .)
    DEFINIR         reduce using rule 59 (empty -> .)
    variable        reduce using rule 59 (empty -> .)
    ADEL            reduce using rule 59 (empty -> .)
    ATR             reduce using rule 59 (empty -> .)
    IZQ             reduce using rule 59 (empty -> .)
    DER             reduce using rule 59 (empty -> .)
    ESP             reduce using rule 59 (empty -> .)
    STOP            reduce using rule 59 (empty -> .)
    IF              reduce using rule 59 (empty -> .)
    WHILE           reduce using rule 59 (empty -> .)
    FUNC            reduce using rule 59 (empty -> .)
    PROGFIN         reduce using rule 59 (empty -> .)
    END             reduce using rule 59 (empty -> .)

    else                           shift and go to state 134
    empty                          shift and go to state 136

state 117

    (46) predicado -> inicioParentesis predicado operadorLog predicado . finParentesis

    finParentesis   shift and go to state 137


state 118

    (52) while -> WHILE predicado BEGIN cuerpo END .

    comLinea        reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    comBloque       reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    saltoLinea      reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    DEF             reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    DEFINIR         reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    variable        reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    ADEL            reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    ATR             reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    IZQ             reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    DER             reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    ESP             reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    STOP            reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    IF              reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    WHILE           reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    FUNC            reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    PROGFIN         reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)
    END             reduce using rule 52 (while -> WHILE predicado BEGIN cuerpo END .)


state 119

    (53) funcion -> FUNC inicioParentesis parametros finParentesis retorno . finLinea

    finLinea        shift and go to state 138


state 120

    (54) retorno -> dosPuntos . varTipo
    (26) varTipo -> . int
    (27) varTipo -> . float
    (28) varTipo -> . string
    (29) varTipo -> . bool

    int             shift and go to state 82
    float           shift and go to state 83
    string          shift and go to state 84
    bool            shift and go to state 85

    varTipo                        shift and go to state 139

state 121

    (55) retorno -> empty .

    finLinea        reduce using rule 55 (retorno -> empty .)


state 122

    (56) parametros -> varTipo dosPuntos variable .
    (57) parametros -> varTipo dosPuntos variable . coma parametros

    finParentesis   reduce using rule 56 (parametros -> varTipo dosPuntos variable .)
    coma            shift and go to state 140


state 123

    (17) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable . comilla finParentesis finLinea

    comilla         shift and go to state 141


state 124

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos SAL . finParentesis finLinea

    finParentesis   shift and go to state 142


state 125

    (16) pin -> DEF PIN inicioParentesis variable dosPuntos ENT . finParentesis finLinea

    finParentesis   shift and go to state 143


state 126

    (18) definir -> DEFINIR inicioParentesis int variable asig numero . finParentesis finLinea

    finParentesis   shift and go to state 144


state 127

    (22) definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .

    comLinea        reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    comBloque       reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    saltoLinea      reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    DEF             reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    DEFINIR         reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    variable        reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    ADEL            reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    ATR             reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    IZQ             reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    DER             reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    ESP             reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    STOP            reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    IF              reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    WHILE           reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    FUNC            reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    PROGFIN         reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)
    END             reduce using rule 22 (definir -> DEFINIR inicioParentesis int variable finParentesis finLinea .)


state 128

    (19) definir -> DEFINIR inicioParentesis float variable asig numero . finParentesis finLinea

    finParentesis   shift and go to state 145


state 129

    (23) definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .

    comLinea        reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    comBloque       reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    saltoLinea      reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    DEF             reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    DEFINIR         reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    variable        reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    ADEL            reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    ATR             reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    IZQ             reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    DER             reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    ESP             reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    STOP            reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    IF              reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    WHILE           reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    FUNC            reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    PROGFIN         reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)
    END             reduce using rule 23 (definir -> DEFINIR inicioParentesis float variable finParentesis finLinea .)


state 130

    (20) definir -> DEFINIR inicioParentesis string variable asig comilla . variable comilla finParentesis finLinea

    variable        shift and go to state 146


state 131

    (24) definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .

    comLinea        reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    comBloque       reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    saltoLinea      reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    DEF             reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    DEFINIR         reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    variable        reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    ADEL            reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    ATR             reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    IZQ             reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    DER             reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    ESP             reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    STOP            reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    IF              reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    WHILE           reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    FUNC            reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    PROGFIN         reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)
    END             reduce using rule 24 (definir -> DEFINIR inicioParentesis string variable finParentesis finLinea .)


state 132

    (21) definir -> DEFINIR inicioParentesis bool variable asig valor . finParentesis finLinea

    finParentesis   shift and go to state 147


state 133

    (25) definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .

    comLinea        reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    comBloque       reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    saltoLinea      reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    DEF             reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    DEFINIR         reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    variable        reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    ADEL            reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    ATR             reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    IZQ             reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    DER             reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    ESP             reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    STOP            reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    IF              reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    WHILE           reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    FUNC            reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    PROGFIN         reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)
    END             reduce using rule 25 (definir -> DEFINIR inicioParentesis bool variable finParentesis finLinea .)


state 134

    (49) if -> IF predicado BEGIN cuerpo END else .

    comLinea        reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    comBloque       reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    saltoLinea      reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    DEF             reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    DEFINIR         reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    variable        reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    ADEL            reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    ATR             reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    IZQ             reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    DER             reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    ESP             reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    STOP            reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    IF              reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    WHILE           reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    FUNC            reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    PROGFIN         reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)
    END             reduce using rule 49 (if -> IF predicado BEGIN cuerpo END else .)


state 135

    (50) else -> ELSE . BEGIN cuerpo END

    BEGIN           shift and go to state 148


state 136

    (51) else -> empty .

    comLinea        reduce using rule 51 (else -> empty .)
    comBloque       reduce using rule 51 (else -> empty .)
    saltoLinea      reduce using rule 51 (else -> empty .)
    DEF             reduce using rule 51 (else -> empty .)
    DEFINIR         reduce using rule 51 (else -> empty .)
    variable        reduce using rule 51 (else -> empty .)
    ADEL            reduce using rule 51 (else -> empty .)
    ATR             reduce using rule 51 (else -> empty .)
    IZQ             reduce using rule 51 (else -> empty .)
    DER             reduce using rule 51 (else -> empty .)
    ESP             reduce using rule 51 (else -> empty .)
    STOP            reduce using rule 51 (else -> empty .)
    IF              reduce using rule 51 (else -> empty .)
    WHILE           reduce using rule 51 (else -> empty .)
    FUNC            reduce using rule 51 (else -> empty .)
    PROGFIN         reduce using rule 51 (else -> empty .)
    END             reduce using rule 51 (else -> empty .)


state 137

    (46) predicado -> inicioParentesis predicado operadorLog predicado finParentesis .

    BEGIN           reduce using rule 46 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)
    AND             reduce using rule 46 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)
    OR              reduce using rule 46 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)
    finParentesis   reduce using rule 46 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)


state 138

    (53) funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .

    comLinea        reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    comBloque       reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    saltoLinea      reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    DEF             reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    DEFINIR         reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    variable        reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    ADEL            reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    ATR             reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    IZQ             reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    DER             reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    ESP             reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    STOP            reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    IF              reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    WHILE           reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    FUNC            reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    PROGFIN         reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    END             reduce using rule 53 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)


state 139

    (54) retorno -> dosPuntos varTipo .

    finLinea        reduce using rule 54 (retorno -> dosPuntos varTipo .)


state 140

    (57) parametros -> varTipo dosPuntos variable coma . parametros
    (56) parametros -> . varTipo dosPuntos variable
    (57) parametros -> . varTipo dosPuntos variable coma parametros
    (58) parametros -> . empty
    (26) varTipo -> . int
    (27) varTipo -> . float
    (28) varTipo -> . string
    (29) varTipo -> . bool
    (59) empty -> .

    int             shift and go to state 82
    float           shift and go to state 83
    string          shift and go to state 84
    bool            shift and go to state 85
    finParentesis   reduce using rule 59 (empty -> .)

    varTipo                        shift and go to state 80
    parametros                     shift and go to state 149
    empty                          shift and go to state 81

state 141

    (17) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla . finParentesis finLinea

    finParentesis   shift and go to state 150


state 142

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis . finLinea

    finLinea        shift and go to state 151


state 143

    (16) pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis . finLinea

    finLinea        shift and go to state 152


state 144

    (18) definir -> DEFINIR inicioParentesis int variable asig numero finParentesis . finLinea

    finLinea        shift and go to state 153


state 145

    (19) definir -> DEFINIR inicioParentesis float variable asig numero finParentesis . finLinea

    finLinea        shift and go to state 154


state 146

    (20) definir -> DEFINIR inicioParentesis string variable asig comilla variable . comilla finParentesis finLinea

    comilla         shift and go to state 155


state 147

    (21) definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis . finLinea

    finLinea        shift and go to state 156


state 148

    (50) else -> ELSE BEGIN . cuerpo END
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea
    (16) pin -> . DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea
    (18) definir -> . DEFINIR inicioParentesis int variable asig numero finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis float variable asig numero finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea
    (21) definir -> . DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea
    (22) definir -> . DEFINIR inicioParentesis int variable finParentesis finLinea
    (23) definir -> . DEFINIR inicioParentesis float variable finParentesis finLinea
    (24) definir -> . DEFINIR inicioParentesis string variable finParentesis finLinea
    (25) definir -> . DEFINIR inicioParentesis bool variable finParentesis finLinea
    (40) asignar -> . variable asig valor finLinea
    (41) asignar -> . variable asig variable finLinea
    (34) reservadas -> . ADEL finFuncion
    (35) reservadas -> . ATR finFuncion
    (36) reservadas -> . IZQ finFuncion
    (37) reservadas -> . DER finFuncion
    (38) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (39) reservadas -> . STOP finFuncion
    (49) if -> . IF predicado BEGIN cuerpo END else
    (52) while -> . WHILE predicado BEGIN cuerpo END
    (53) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (59) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    END             reduce using rule 59 (empty -> .)

    cuerpo                         shift and go to state 157
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 149

    (57) parametros -> varTipo dosPuntos variable coma parametros .

    finParentesis   reduce using rule 57 (parametros -> varTipo dosPuntos variable coma parametros .)


state 150

    (17) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis . finLinea

    finLinea        shift and go to state 158


state 151

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .

    comLinea        reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    comBloque       reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    saltoLinea      reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    DEF             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    DEFINIR         reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    variable        reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    ADEL            reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    ATR             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    IZQ             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    DER             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    ESP             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    STOP            reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    IF              reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    WHILE           reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    FUNC            reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    PROGFIN         reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)
    END             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos SAL finParentesis finLinea .)


state 152

    (16) pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .

    comLinea        reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    comBloque       reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    saltoLinea      reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    DEF             reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    DEFINIR         reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    variable        reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    ADEL            reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    ATR             reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    IZQ             reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    DER             reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    ESP             reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    STOP            reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    IF              reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    WHILE           reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    FUNC            reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    PROGFIN         reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)
    END             reduce using rule 16 (pin -> DEF PIN inicioParentesis variable dosPuntos ENT finParentesis finLinea .)


state 153

    (18) definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .

    comLinea        reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    comBloque       reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    saltoLinea      reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    DEF             reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    DEFINIR         reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    variable        reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    ADEL            reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    ATR             reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    IZQ             reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    DER             reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    ESP             reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    STOP            reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    IF              reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    WHILE           reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    FUNC            reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    PROGFIN         reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)
    END             reduce using rule 18 (definir -> DEFINIR inicioParentesis int variable asig numero finParentesis finLinea .)


state 154

    (19) definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .

    comLinea        reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    comBloque       reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    saltoLinea      reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    DEF             reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    DEFINIR         reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    variable        reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    ADEL            reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    ATR             reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    IZQ             reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    DER             reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    ESP             reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    STOP            reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    IF              reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    WHILE           reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    FUNC            reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    PROGFIN         reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)
    END             reduce using rule 19 (definir -> DEFINIR inicioParentesis float variable asig numero finParentesis finLinea .)


state 155

    (20) definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla . finParentesis finLinea

    finParentesis   shift and go to state 159


state 156

    (21) definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .

    comLinea        reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    comBloque       reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    saltoLinea      reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    DEF             reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    DEFINIR         reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    variable        reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    ADEL            reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    ATR             reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    IZQ             reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    DER             reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    ESP             reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    STOP            reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    IF              reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    WHILE           reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    FUNC            reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    PROGFIN         reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)
    END             reduce using rule 21 (definir -> DEFINIR inicioParentesis bool variable asig valor finParentesis finLinea .)


state 157

    (50) else -> ELSE BEGIN cuerpo . END

    END             shift and go to state 160


state 158

    (17) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .

    INCLUIR         reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    comLinea        reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    comBloque       reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    saltoLinea      reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    DEF             reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    DEFINIR         reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    variable        reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    ADEL            reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    ATR             reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    IZQ             reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    DER             reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    ESP             reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    STOP            reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    IF              reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    WHILE           reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    FUNC            reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    PROGFIN         reduce using rule 17 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)


state 159

    (20) definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis . finLinea

    finLinea        shift and go to state 161


state 160

    (50) else -> ELSE BEGIN cuerpo END .

    comLinea        reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    comBloque       reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    saltoLinea      reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    DEF             reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    DEFINIR         reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    variable        reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    ADEL            reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    ATR             reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    IZQ             reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    DER             reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    ESP             reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    STOP            reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    IF              reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    WHILE           reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    FUNC            reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    PROGFIN         reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)
    END             reduce using rule 50 (else -> ELSE BEGIN cuerpo END .)


state 161

    (20) definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .

    comLinea        reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    comBloque       reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    saltoLinea      reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    DEF             reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    DEFINIR         reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    variable        reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    ADEL            reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    ATR             reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    IZQ             reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    DER             reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    ESP             reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    STOP            reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    IF              reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    WHILE           reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    FUNC            reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    PROGFIN         reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)
    END             reduce using rule 20 (definir -> DEFINIR inicioParentesis string variable asig comilla variable comilla finParentesis finLinea .)

