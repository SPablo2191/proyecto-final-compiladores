Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    operadorAr

Grammar

Rule 0     S' -> s
Rule 1     s -> PROGINI programa PROGFIN
Rule 2     programa -> incluir programa
Rule 3     programa -> cuerpo
Rule 4     cuerpo -> pin cuerpo
Rule 5     cuerpo -> definir cuerpo
Rule 6     cuerpo -> asignar cuerpo
Rule 7     cuerpo -> comLinea cuerpo
Rule 8     cuerpo -> comBloque cuerpo
Rule 9     cuerpo -> saltoLinea cuerpo
Rule 10    cuerpo -> reservadas cuerpo
Rule 11    cuerpo -> if cuerpo
Rule 12    cuerpo -> while cuerpo
Rule 13    cuerpo -> funcion cuerpo
Rule 14    cuerpo -> empty
Rule 15    pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
Rule 16    pinTipo -> SAL
Rule 17    pinTipo -> ENT
Rule 18    incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea
Rule 19    definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
Rule 20    definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea
Rule 21    varTipo -> int
Rule 22    varTipo -> float
Rule 23    varTipo -> string
Rule 24    varTipo -> bool
Rule 25    valor -> numero
Rule 26    valor -> comilla variable comilla
Rule 27    valor -> true
Rule 28    valor -> false
Rule 29    reservadas -> ADEL finFuncion
Rule 30    reservadas -> ATR finFuncion
Rule 31    reservadas -> IZQ finFuncion
Rule 32    reservadas -> DER finFuncion
Rule 33    reservadas -> ESP inicioParentesis numero finParentesis finLinea
Rule 34    reservadas -> STOP finFuncion
Rule 35    asignar -> variable asig valor finLinea
Rule 36    asignar -> variable asig variable finLinea
Rule 37    finFuncion -> inicioParentesis finParentesis finLinea
Rule 38    predicado -> false
Rule 39    predicado -> true
Rule 40    predicado -> valor operadorComp valor
Rule 41    predicado -> inicioParentesis predicado operadorLog predicado finParentesis
Rule 42    operadorLog -> AND
Rule 43    operadorLog -> OR
Rule 44    if -> IF predicado BEGIN cuerpo END else
Rule 45    else -> ELSE BEGIN cuerpo END
Rule 46    else -> empty
Rule 47    while -> WHILE predicado BEGIN cuerpo END
Rule 48    funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea
Rule 49    retorno -> dosPuntos varTipo
Rule 50    retorno -> empty
Rule 51    parametros -> varTipo dosPuntos variable
Rule 52    parametros -> varTipo dosPuntos variable coma parametros
Rule 53    parametros -> empty
Rule 54    empty -> <empty>

Terminals, with rules where they appear

ADEL                 : 29
AND                  : 42
ATR                  : 30
BEGIN                : 44 45 47
DEF                  : 15
DEFINIR              : 19 20
DER                  : 32
ELSE                 : 45
END                  : 44 45 47
ENT                  : 17
ESP                  : 33
FUNC                 : 48
IF                   : 44
INCLUIR              : 18
IZQ                  : 31
OR                   : 43
PIN                  : 15
PROGFIN              : 1
PROGINI              : 1
SAL                  : 16
STOP                 : 34
WHILE                : 47
asig                 : 19 35 36
bool                 : 24
comBloque            : 8
comLinea             : 7
coma                 : 52
comilla              : 18 18 26 26
dosPuntos            : 15 49 51 52
error                : 
false                : 28 38
finLinea             : 15 18 18 19 20 33 35 36 37 48
finParentesis        : 15 18 19 20 33 37 41 48
float                : 22
inicioParentesis     : 15 18 19 20 33 37 41 48
int                  : 21
numero               : 25 33
operadorAr           : 
operadorComp         : 40
saltoLinea           : 9
string               : 23
true                 : 27 39
variable             : 15 18 18 19 20 26 35 36 36 51 52

Nonterminals, with rules where they appear

asignar              : 6
cuerpo               : 3 4 5 6 7 8 9 10 11 12 13 44 45 47
definir              : 5
else                 : 44
empty                : 14 46 50 53
finFuncion           : 29 30 31 32 34
funcion              : 13
if                   : 11
incluir              : 2
operadorLog          : 41
parametros           : 48 52
pin                  : 4
pinTipo              : 15
predicado            : 41 41 44 47
programa             : 1 2
reservadas           : 10
retorno              : 48
s                    : 0
valor                : 19 35 40 40
varTipo              : 19 20 49 51 52
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . PROGINI programa PROGFIN

    PROGINI         shift and go to state 2

    s                              shift and go to state 1

state 1

    (0) S' -> s .



state 2

    (1) s -> PROGINI . programa PROGFIN
    (2) programa -> . incluir programa
    (3) programa -> . cuerpo
    (18) incluir -> . INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    INCLUIR         shift and go to state 6
    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)

    programa                       shift and go to state 3
    incluir                        shift and go to state 4
    cuerpo                         shift and go to state 5
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 3

    (1) s -> PROGINI programa . PROGFIN

    PROGFIN         shift and go to state 30


state 4

    (2) programa -> incluir . programa
    (2) programa -> . incluir programa
    (3) programa -> . cuerpo
    (18) incluir -> . INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    INCLUIR         shift and go to state 6
    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)

    incluir                        shift and go to state 4
    programa                       shift and go to state 31
    cuerpo                         shift and go to state 5
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 5

    (3) programa -> cuerpo .

    PROGFIN         reduce using rule 3 (programa -> cuerpo .)


state 6

    (18) incluir -> INCLUIR . inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea

    inicioParentesis shift and go to state 32


state 7

    (35) asignar -> variable . asig valor finLinea
    (36) asignar -> variable . asig variable finLinea

    asig            shift and go to state 33


state 8

    (4) cuerpo -> pin . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    pin                            shift and go to state 8
    cuerpo                         shift and go to state 34
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 9

    (5) cuerpo -> definir . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    definir                        shift and go to state 9
    cuerpo                         shift and go to state 35
    pin                            shift and go to state 8
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 10

    (6) cuerpo -> asignar . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    asignar                        shift and go to state 10
    cuerpo                         shift and go to state 36
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 11

    (7) cuerpo -> comLinea . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    cuerpo                         shift and go to state 37
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 12

    (8) cuerpo -> comBloque . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    cuerpo                         shift and go to state 38
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 13

    (9) cuerpo -> saltoLinea . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    cuerpo                         shift and go to state 39
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 14

    (10) cuerpo -> reservadas . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    reservadas                     shift and go to state 14
    cuerpo                         shift and go to state 40
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 15

    (11) cuerpo -> if . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    if                             shift and go to state 15
    cuerpo                         shift and go to state 41
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 16

    (12) cuerpo -> while . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    while                          shift and go to state 16
    cuerpo                         shift and go to state 42
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 17

    (13) cuerpo -> funcion . cuerpo
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    funcion                        shift and go to state 17
    cuerpo                         shift and go to state 43
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    empty                          shift and go to state 18

state 18

    (14) cuerpo -> empty .

    PROGFIN         reduce using rule 14 (cuerpo -> empty .)
    END             reduce using rule 14 (cuerpo -> empty .)


state 19

    (15) pin -> DEF . PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea

    PIN             shift and go to state 44


state 20

    (19) definir -> DEFINIR . inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> DEFINIR . inicioParentesis varTipo variable finParentesis finLinea

    inicioParentesis shift and go to state 45


state 21

    (29) reservadas -> ADEL . finFuncion
    (37) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 46

state 22

    (30) reservadas -> ATR . finFuncion
    (37) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 48

state 23

    (31) reservadas -> IZQ . finFuncion
    (37) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 49

state 24

    (32) reservadas -> DER . finFuncion
    (37) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 50

state 25

    (33) reservadas -> ESP . inicioParentesis numero finParentesis finLinea

    inicioParentesis shift and go to state 51


state 26

    (34) reservadas -> STOP . finFuncion
    (37) finFuncion -> . inicioParentesis finParentesis finLinea

    inicioParentesis shift and go to state 47

    finFuncion                     shift and go to state 52

state 27

    (44) if -> IF . predicado BEGIN cuerpo END else
    (38) predicado -> . false
    (39) predicado -> . true
    (40) predicado -> . valor operadorComp valor
    (41) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (25) valor -> . numero
    (26) valor -> . comilla variable comilla
    (27) valor -> . true
    (28) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 53
    valor                          shift and go to state 56

state 28

    (47) while -> WHILE . predicado BEGIN cuerpo END
    (38) predicado -> . false
    (39) predicado -> . true
    (40) predicado -> . valor operadorComp valor
    (41) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (25) valor -> . numero
    (26) valor -> . comilla variable comilla
    (27) valor -> . true
    (28) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 60
    valor                          shift and go to state 56

state 29

    (48) funcion -> FUNC . inicioParentesis parametros finParentesis retorno finLinea

    inicioParentesis shift and go to state 61


state 30

    (1) s -> PROGINI programa PROGFIN .

    $end            reduce using rule 1 (s -> PROGINI programa PROGFIN .)


state 31

    (2) programa -> incluir programa .

    PROGFIN         reduce using rule 2 (programa -> incluir programa .)


state 32

    (18) incluir -> INCLUIR inicioParentesis . comilla variable finLinea variable comilla finParentesis finLinea

    comilla         shift and go to state 62


state 33

    (35) asignar -> variable asig . valor finLinea
    (36) asignar -> variable asig . variable finLinea
    (25) valor -> . numero
    (26) valor -> . comilla variable comilla
    (27) valor -> . true
    (28) valor -> . false

    variable        shift and go to state 63
    numero          shift and go to state 58
    comilla         shift and go to state 59
    true            shift and go to state 65
    false           shift and go to state 66

    valor                          shift and go to state 64

state 34

    (4) cuerpo -> pin cuerpo .

    PROGFIN         reduce using rule 4 (cuerpo -> pin cuerpo .)
    END             reduce using rule 4 (cuerpo -> pin cuerpo .)


state 35

    (5) cuerpo -> definir cuerpo .

    PROGFIN         reduce using rule 5 (cuerpo -> definir cuerpo .)
    END             reduce using rule 5 (cuerpo -> definir cuerpo .)


state 36

    (6) cuerpo -> asignar cuerpo .

    PROGFIN         reduce using rule 6 (cuerpo -> asignar cuerpo .)
    END             reduce using rule 6 (cuerpo -> asignar cuerpo .)


state 37

    (7) cuerpo -> comLinea cuerpo .

    PROGFIN         reduce using rule 7 (cuerpo -> comLinea cuerpo .)
    END             reduce using rule 7 (cuerpo -> comLinea cuerpo .)


state 38

    (8) cuerpo -> comBloque cuerpo .

    PROGFIN         reduce using rule 8 (cuerpo -> comBloque cuerpo .)
    END             reduce using rule 8 (cuerpo -> comBloque cuerpo .)


state 39

    (9) cuerpo -> saltoLinea cuerpo .

    PROGFIN         reduce using rule 9 (cuerpo -> saltoLinea cuerpo .)
    END             reduce using rule 9 (cuerpo -> saltoLinea cuerpo .)


state 40

    (10) cuerpo -> reservadas cuerpo .

    PROGFIN         reduce using rule 10 (cuerpo -> reservadas cuerpo .)
    END             reduce using rule 10 (cuerpo -> reservadas cuerpo .)


state 41

    (11) cuerpo -> if cuerpo .

    PROGFIN         reduce using rule 11 (cuerpo -> if cuerpo .)
    END             reduce using rule 11 (cuerpo -> if cuerpo .)


state 42

    (12) cuerpo -> while cuerpo .

    PROGFIN         reduce using rule 12 (cuerpo -> while cuerpo .)
    END             reduce using rule 12 (cuerpo -> while cuerpo .)


state 43

    (13) cuerpo -> funcion cuerpo .

    PROGFIN         reduce using rule 13 (cuerpo -> funcion cuerpo .)
    END             reduce using rule 13 (cuerpo -> funcion cuerpo .)


state 44

    (15) pin -> DEF PIN . inicioParentesis variable dosPuntos pinTipo finParentesis finLinea

    inicioParentesis shift and go to state 67


state 45

    (19) definir -> DEFINIR inicioParentesis . varTipo variable asig valor finParentesis finLinea
    (20) definir -> DEFINIR inicioParentesis . varTipo variable finParentesis finLinea
    (21) varTipo -> . int
    (22) varTipo -> . float
    (23) varTipo -> . string
    (24) varTipo -> . bool

    int             shift and go to state 69
    float           shift and go to state 70
    string          shift and go to state 71
    bool            shift and go to state 72

    varTipo                        shift and go to state 68

state 46

    (29) reservadas -> ADEL finFuncion .

    comLinea        reduce using rule 29 (reservadas -> ADEL finFuncion .)
    comBloque       reduce using rule 29 (reservadas -> ADEL finFuncion .)
    saltoLinea      reduce using rule 29 (reservadas -> ADEL finFuncion .)
    DEF             reduce using rule 29 (reservadas -> ADEL finFuncion .)
    DEFINIR         reduce using rule 29 (reservadas -> ADEL finFuncion .)
    variable        reduce using rule 29 (reservadas -> ADEL finFuncion .)
    ADEL            reduce using rule 29 (reservadas -> ADEL finFuncion .)
    ATR             reduce using rule 29 (reservadas -> ADEL finFuncion .)
    IZQ             reduce using rule 29 (reservadas -> ADEL finFuncion .)
    DER             reduce using rule 29 (reservadas -> ADEL finFuncion .)
    ESP             reduce using rule 29 (reservadas -> ADEL finFuncion .)
    STOP            reduce using rule 29 (reservadas -> ADEL finFuncion .)
    IF              reduce using rule 29 (reservadas -> ADEL finFuncion .)
    WHILE           reduce using rule 29 (reservadas -> ADEL finFuncion .)
    FUNC            reduce using rule 29 (reservadas -> ADEL finFuncion .)
    PROGFIN         reduce using rule 29 (reservadas -> ADEL finFuncion .)
    END             reduce using rule 29 (reservadas -> ADEL finFuncion .)


state 47

    (37) finFuncion -> inicioParentesis . finParentesis finLinea

    finParentesis   shift and go to state 73


state 48

    (30) reservadas -> ATR finFuncion .

    comLinea        reduce using rule 30 (reservadas -> ATR finFuncion .)
    comBloque       reduce using rule 30 (reservadas -> ATR finFuncion .)
    saltoLinea      reduce using rule 30 (reservadas -> ATR finFuncion .)
    DEF             reduce using rule 30 (reservadas -> ATR finFuncion .)
    DEFINIR         reduce using rule 30 (reservadas -> ATR finFuncion .)
    variable        reduce using rule 30 (reservadas -> ATR finFuncion .)
    ADEL            reduce using rule 30 (reservadas -> ATR finFuncion .)
    ATR             reduce using rule 30 (reservadas -> ATR finFuncion .)
    IZQ             reduce using rule 30 (reservadas -> ATR finFuncion .)
    DER             reduce using rule 30 (reservadas -> ATR finFuncion .)
    ESP             reduce using rule 30 (reservadas -> ATR finFuncion .)
    STOP            reduce using rule 30 (reservadas -> ATR finFuncion .)
    IF              reduce using rule 30 (reservadas -> ATR finFuncion .)
    WHILE           reduce using rule 30 (reservadas -> ATR finFuncion .)
    FUNC            reduce using rule 30 (reservadas -> ATR finFuncion .)
    PROGFIN         reduce using rule 30 (reservadas -> ATR finFuncion .)
    END             reduce using rule 30 (reservadas -> ATR finFuncion .)


state 49

    (31) reservadas -> IZQ finFuncion .

    comLinea        reduce using rule 31 (reservadas -> IZQ finFuncion .)
    comBloque       reduce using rule 31 (reservadas -> IZQ finFuncion .)
    saltoLinea      reduce using rule 31 (reservadas -> IZQ finFuncion .)
    DEF             reduce using rule 31 (reservadas -> IZQ finFuncion .)
    DEFINIR         reduce using rule 31 (reservadas -> IZQ finFuncion .)
    variable        reduce using rule 31 (reservadas -> IZQ finFuncion .)
    ADEL            reduce using rule 31 (reservadas -> IZQ finFuncion .)
    ATR             reduce using rule 31 (reservadas -> IZQ finFuncion .)
    IZQ             reduce using rule 31 (reservadas -> IZQ finFuncion .)
    DER             reduce using rule 31 (reservadas -> IZQ finFuncion .)
    ESP             reduce using rule 31 (reservadas -> IZQ finFuncion .)
    STOP            reduce using rule 31 (reservadas -> IZQ finFuncion .)
    IF              reduce using rule 31 (reservadas -> IZQ finFuncion .)
    WHILE           reduce using rule 31 (reservadas -> IZQ finFuncion .)
    FUNC            reduce using rule 31 (reservadas -> IZQ finFuncion .)
    PROGFIN         reduce using rule 31 (reservadas -> IZQ finFuncion .)
    END             reduce using rule 31 (reservadas -> IZQ finFuncion .)


state 50

    (32) reservadas -> DER finFuncion .

    comLinea        reduce using rule 32 (reservadas -> DER finFuncion .)
    comBloque       reduce using rule 32 (reservadas -> DER finFuncion .)
    saltoLinea      reduce using rule 32 (reservadas -> DER finFuncion .)
    DEF             reduce using rule 32 (reservadas -> DER finFuncion .)
    DEFINIR         reduce using rule 32 (reservadas -> DER finFuncion .)
    variable        reduce using rule 32 (reservadas -> DER finFuncion .)
    ADEL            reduce using rule 32 (reservadas -> DER finFuncion .)
    ATR             reduce using rule 32 (reservadas -> DER finFuncion .)
    IZQ             reduce using rule 32 (reservadas -> DER finFuncion .)
    DER             reduce using rule 32 (reservadas -> DER finFuncion .)
    ESP             reduce using rule 32 (reservadas -> DER finFuncion .)
    STOP            reduce using rule 32 (reservadas -> DER finFuncion .)
    IF              reduce using rule 32 (reservadas -> DER finFuncion .)
    WHILE           reduce using rule 32 (reservadas -> DER finFuncion .)
    FUNC            reduce using rule 32 (reservadas -> DER finFuncion .)
    PROGFIN         reduce using rule 32 (reservadas -> DER finFuncion .)
    END             reduce using rule 32 (reservadas -> DER finFuncion .)


state 51

    (33) reservadas -> ESP inicioParentesis . numero finParentesis finLinea

    numero          shift and go to state 74


state 52

    (34) reservadas -> STOP finFuncion .

    comLinea        reduce using rule 34 (reservadas -> STOP finFuncion .)
    comBloque       reduce using rule 34 (reservadas -> STOP finFuncion .)
    saltoLinea      reduce using rule 34 (reservadas -> STOP finFuncion .)
    DEF             reduce using rule 34 (reservadas -> STOP finFuncion .)
    DEFINIR         reduce using rule 34 (reservadas -> STOP finFuncion .)
    variable        reduce using rule 34 (reservadas -> STOP finFuncion .)
    ADEL            reduce using rule 34 (reservadas -> STOP finFuncion .)
    ATR             reduce using rule 34 (reservadas -> STOP finFuncion .)
    IZQ             reduce using rule 34 (reservadas -> STOP finFuncion .)
    DER             reduce using rule 34 (reservadas -> STOP finFuncion .)
    ESP             reduce using rule 34 (reservadas -> STOP finFuncion .)
    STOP            reduce using rule 34 (reservadas -> STOP finFuncion .)
    IF              reduce using rule 34 (reservadas -> STOP finFuncion .)
    WHILE           reduce using rule 34 (reservadas -> STOP finFuncion .)
    FUNC            reduce using rule 34 (reservadas -> STOP finFuncion .)
    PROGFIN         reduce using rule 34 (reservadas -> STOP finFuncion .)
    END             reduce using rule 34 (reservadas -> STOP finFuncion .)


state 53

    (44) if -> IF predicado . BEGIN cuerpo END else

    BEGIN           shift and go to state 75


state 54

    (38) predicado -> false .
    (28) valor -> false .

    BEGIN           reduce using rule 38 (predicado -> false .)
    AND             reduce using rule 38 (predicado -> false .)
    OR              reduce using rule 38 (predicado -> false .)
    finParentesis   reduce using rule 38 (predicado -> false .)
    operadorComp    reduce using rule 28 (valor -> false .)


state 55

    (39) predicado -> true .
    (27) valor -> true .

    BEGIN           reduce using rule 39 (predicado -> true .)
    AND             reduce using rule 39 (predicado -> true .)
    OR              reduce using rule 39 (predicado -> true .)
    finParentesis   reduce using rule 39 (predicado -> true .)
    operadorComp    reduce using rule 27 (valor -> true .)


state 56

    (40) predicado -> valor . operadorComp valor

    operadorComp    shift and go to state 76


state 57

    (41) predicado -> inicioParentesis . predicado operadorLog predicado finParentesis
    (38) predicado -> . false
    (39) predicado -> . true
    (40) predicado -> . valor operadorComp valor
    (41) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (25) valor -> . numero
    (26) valor -> . comilla variable comilla
    (27) valor -> . true
    (28) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 77
    valor                          shift and go to state 56

state 58

    (25) valor -> numero .

    operadorComp    reduce using rule 25 (valor -> numero .)
    finLinea        reduce using rule 25 (valor -> numero .)
    BEGIN           reduce using rule 25 (valor -> numero .)
    AND             reduce using rule 25 (valor -> numero .)
    OR              reduce using rule 25 (valor -> numero .)
    finParentesis   reduce using rule 25 (valor -> numero .)


state 59

    (26) valor -> comilla . variable comilla

    variable        shift and go to state 78


state 60

    (47) while -> WHILE predicado . BEGIN cuerpo END

    BEGIN           shift and go to state 79


state 61

    (48) funcion -> FUNC inicioParentesis . parametros finParentesis retorno finLinea
    (51) parametros -> . varTipo dosPuntos variable
    (52) parametros -> . varTipo dosPuntos variable coma parametros
    (53) parametros -> . empty
    (21) varTipo -> . int
    (22) varTipo -> . float
    (23) varTipo -> . string
    (24) varTipo -> . bool
    (54) empty -> .

    int             shift and go to state 69
    float           shift and go to state 70
    string          shift and go to state 71
    bool            shift and go to state 72
    finParentesis   reduce using rule 54 (empty -> .)

    parametros                     shift and go to state 80
    varTipo                        shift and go to state 81
    empty                          shift and go to state 82

state 62

    (18) incluir -> INCLUIR inicioParentesis comilla . variable finLinea variable comilla finParentesis finLinea

    variable        shift and go to state 83


state 63

    (36) asignar -> variable asig variable . finLinea

    finLinea        shift and go to state 84


state 64

    (35) asignar -> variable asig valor . finLinea

    finLinea        shift and go to state 85


state 65

    (27) valor -> true .

    finLinea        reduce using rule 27 (valor -> true .)
    BEGIN           reduce using rule 27 (valor -> true .)
    AND             reduce using rule 27 (valor -> true .)
    OR              reduce using rule 27 (valor -> true .)
    finParentesis   reduce using rule 27 (valor -> true .)


state 66

    (28) valor -> false .

    finLinea        reduce using rule 28 (valor -> false .)
    BEGIN           reduce using rule 28 (valor -> false .)
    AND             reduce using rule 28 (valor -> false .)
    OR              reduce using rule 28 (valor -> false .)
    finParentesis   reduce using rule 28 (valor -> false .)


state 67

    (15) pin -> DEF PIN inicioParentesis . variable dosPuntos pinTipo finParentesis finLinea

    variable        shift and go to state 86


state 68

    (19) definir -> DEFINIR inicioParentesis varTipo . variable asig valor finParentesis finLinea
    (20) definir -> DEFINIR inicioParentesis varTipo . variable finParentesis finLinea

    variable        shift and go to state 87


state 69

    (21) varTipo -> int .

    variable        reduce using rule 21 (varTipo -> int .)
    dosPuntos       reduce using rule 21 (varTipo -> int .)
    finLinea        reduce using rule 21 (varTipo -> int .)


state 70

    (22) varTipo -> float .

    variable        reduce using rule 22 (varTipo -> float .)
    dosPuntos       reduce using rule 22 (varTipo -> float .)
    finLinea        reduce using rule 22 (varTipo -> float .)


state 71

    (23) varTipo -> string .

    variable        reduce using rule 23 (varTipo -> string .)
    dosPuntos       reduce using rule 23 (varTipo -> string .)
    finLinea        reduce using rule 23 (varTipo -> string .)


state 72

    (24) varTipo -> bool .

    variable        reduce using rule 24 (varTipo -> bool .)
    dosPuntos       reduce using rule 24 (varTipo -> bool .)
    finLinea        reduce using rule 24 (varTipo -> bool .)


state 73

    (37) finFuncion -> inicioParentesis finParentesis . finLinea

    finLinea        shift and go to state 88


state 74

    (33) reservadas -> ESP inicioParentesis numero . finParentesis finLinea

    finParentesis   shift and go to state 89


state 75

    (44) if -> IF predicado BEGIN . cuerpo END else
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    END             reduce using rule 54 (empty -> .)

    cuerpo                         shift and go to state 90
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 76

    (40) predicado -> valor operadorComp . valor
    (25) valor -> . numero
    (26) valor -> . comilla variable comilla
    (27) valor -> . true
    (28) valor -> . false

    numero          shift and go to state 58
    comilla         shift and go to state 59
    true            shift and go to state 65
    false           shift and go to state 66

    valor                          shift and go to state 91

state 77

    (41) predicado -> inicioParentesis predicado . operadorLog predicado finParentesis
    (42) operadorLog -> . AND
    (43) operadorLog -> . OR

    AND             shift and go to state 93
    OR              shift and go to state 94

    operadorLog                    shift and go to state 92

state 78

    (26) valor -> comilla variable . comilla

    comilla         shift and go to state 95


state 79

    (47) while -> WHILE predicado BEGIN . cuerpo END
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    END             reduce using rule 54 (empty -> .)

    cuerpo                         shift and go to state 96
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 80

    (48) funcion -> FUNC inicioParentesis parametros . finParentesis retorno finLinea

    finParentesis   shift and go to state 97


state 81

    (51) parametros -> varTipo . dosPuntos variable
    (52) parametros -> varTipo . dosPuntos variable coma parametros

    dosPuntos       shift and go to state 98


state 82

    (53) parametros -> empty .

    finParentesis   reduce using rule 53 (parametros -> empty .)


state 83

    (18) incluir -> INCLUIR inicioParentesis comilla variable . finLinea variable comilla finParentesis finLinea

    finLinea        shift and go to state 99


state 84

    (36) asignar -> variable asig variable finLinea .

    comLinea        reduce using rule 36 (asignar -> variable asig variable finLinea .)
    comBloque       reduce using rule 36 (asignar -> variable asig variable finLinea .)
    saltoLinea      reduce using rule 36 (asignar -> variable asig variable finLinea .)
    DEF             reduce using rule 36 (asignar -> variable asig variable finLinea .)
    DEFINIR         reduce using rule 36 (asignar -> variable asig variable finLinea .)
    variable        reduce using rule 36 (asignar -> variable asig variable finLinea .)
    ADEL            reduce using rule 36 (asignar -> variable asig variable finLinea .)
    ATR             reduce using rule 36 (asignar -> variable asig variable finLinea .)
    IZQ             reduce using rule 36 (asignar -> variable asig variable finLinea .)
    DER             reduce using rule 36 (asignar -> variable asig variable finLinea .)
    ESP             reduce using rule 36 (asignar -> variable asig variable finLinea .)
    STOP            reduce using rule 36 (asignar -> variable asig variable finLinea .)
    IF              reduce using rule 36 (asignar -> variable asig variable finLinea .)
    WHILE           reduce using rule 36 (asignar -> variable asig variable finLinea .)
    FUNC            reduce using rule 36 (asignar -> variable asig variable finLinea .)
    PROGFIN         reduce using rule 36 (asignar -> variable asig variable finLinea .)
    END             reduce using rule 36 (asignar -> variable asig variable finLinea .)


state 85

    (35) asignar -> variable asig valor finLinea .

    comLinea        reduce using rule 35 (asignar -> variable asig valor finLinea .)
    comBloque       reduce using rule 35 (asignar -> variable asig valor finLinea .)
    saltoLinea      reduce using rule 35 (asignar -> variable asig valor finLinea .)
    DEF             reduce using rule 35 (asignar -> variable asig valor finLinea .)
    DEFINIR         reduce using rule 35 (asignar -> variable asig valor finLinea .)
    variable        reduce using rule 35 (asignar -> variable asig valor finLinea .)
    ADEL            reduce using rule 35 (asignar -> variable asig valor finLinea .)
    ATR             reduce using rule 35 (asignar -> variable asig valor finLinea .)
    IZQ             reduce using rule 35 (asignar -> variable asig valor finLinea .)
    DER             reduce using rule 35 (asignar -> variable asig valor finLinea .)
    ESP             reduce using rule 35 (asignar -> variable asig valor finLinea .)
    STOP            reduce using rule 35 (asignar -> variable asig valor finLinea .)
    IF              reduce using rule 35 (asignar -> variable asig valor finLinea .)
    WHILE           reduce using rule 35 (asignar -> variable asig valor finLinea .)
    FUNC            reduce using rule 35 (asignar -> variable asig valor finLinea .)
    PROGFIN         reduce using rule 35 (asignar -> variable asig valor finLinea .)
    END             reduce using rule 35 (asignar -> variable asig valor finLinea .)


state 86

    (15) pin -> DEF PIN inicioParentesis variable . dosPuntos pinTipo finParentesis finLinea

    dosPuntos       shift and go to state 100


state 87

    (19) definir -> DEFINIR inicioParentesis varTipo variable . asig valor finParentesis finLinea
    (20) definir -> DEFINIR inicioParentesis varTipo variable . finParentesis finLinea

    asig            shift and go to state 101
    finParentesis   shift and go to state 102


state 88

    (37) finFuncion -> inicioParentesis finParentesis finLinea .

    comLinea        reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    comBloque       reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    saltoLinea      reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    DEF             reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    DEFINIR         reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    variable        reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    ADEL            reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    ATR             reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    IZQ             reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    DER             reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    ESP             reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    STOP            reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    IF              reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    WHILE           reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    FUNC            reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    PROGFIN         reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)
    END             reduce using rule 37 (finFuncion -> inicioParentesis finParentesis finLinea .)


state 89

    (33) reservadas -> ESP inicioParentesis numero finParentesis . finLinea

    finLinea        shift and go to state 103


state 90

    (44) if -> IF predicado BEGIN cuerpo . END else

    END             shift and go to state 104


state 91

    (40) predicado -> valor operadorComp valor .

    BEGIN           reduce using rule 40 (predicado -> valor operadorComp valor .)
    AND             reduce using rule 40 (predicado -> valor operadorComp valor .)
    OR              reduce using rule 40 (predicado -> valor operadorComp valor .)
    finParentesis   reduce using rule 40 (predicado -> valor operadorComp valor .)


state 92

    (41) predicado -> inicioParentesis predicado operadorLog . predicado finParentesis
    (38) predicado -> . false
    (39) predicado -> . true
    (40) predicado -> . valor operadorComp valor
    (41) predicado -> . inicioParentesis predicado operadorLog predicado finParentesis
    (25) valor -> . numero
    (26) valor -> . comilla variable comilla
    (27) valor -> . true
    (28) valor -> . false

    false           shift and go to state 54
    true            shift and go to state 55
    inicioParentesis shift and go to state 57
    numero          shift and go to state 58
    comilla         shift and go to state 59

    predicado                      shift and go to state 105
    valor                          shift and go to state 56

state 93

    (42) operadorLog -> AND .

    false           reduce using rule 42 (operadorLog -> AND .)
    true            reduce using rule 42 (operadorLog -> AND .)
    inicioParentesis reduce using rule 42 (operadorLog -> AND .)
    numero          reduce using rule 42 (operadorLog -> AND .)
    comilla         reduce using rule 42 (operadorLog -> AND .)


state 94

    (43) operadorLog -> OR .

    false           reduce using rule 43 (operadorLog -> OR .)
    true            reduce using rule 43 (operadorLog -> OR .)
    inicioParentesis reduce using rule 43 (operadorLog -> OR .)
    numero          reduce using rule 43 (operadorLog -> OR .)
    comilla         reduce using rule 43 (operadorLog -> OR .)


state 95

    (26) valor -> comilla variable comilla .

    operadorComp    reduce using rule 26 (valor -> comilla variable comilla .)
    finLinea        reduce using rule 26 (valor -> comilla variable comilla .)
    BEGIN           reduce using rule 26 (valor -> comilla variable comilla .)
    AND             reduce using rule 26 (valor -> comilla variable comilla .)
    OR              reduce using rule 26 (valor -> comilla variable comilla .)
    finParentesis   reduce using rule 26 (valor -> comilla variable comilla .)


state 96

    (47) while -> WHILE predicado BEGIN cuerpo . END

    END             shift and go to state 106


state 97

    (48) funcion -> FUNC inicioParentesis parametros finParentesis . retorno finLinea
    (49) retorno -> . dosPuntos varTipo
    (50) retorno -> . empty
    (54) empty -> .

    dosPuntos       shift and go to state 108
    finLinea        reduce using rule 54 (empty -> .)

    retorno                        shift and go to state 107
    empty                          shift and go to state 109

state 98

    (51) parametros -> varTipo dosPuntos . variable
    (52) parametros -> varTipo dosPuntos . variable coma parametros

    variable        shift and go to state 110


state 99

    (18) incluir -> INCLUIR inicioParentesis comilla variable finLinea . variable comilla finParentesis finLinea

    variable        shift and go to state 111


state 100

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos . pinTipo finParentesis finLinea
    (16) pinTipo -> . SAL
    (17) pinTipo -> . ENT

    SAL             shift and go to state 113
    ENT             shift and go to state 114

    pinTipo                        shift and go to state 112

state 101

    (19) definir -> DEFINIR inicioParentesis varTipo variable asig . valor finParentesis finLinea
    (25) valor -> . numero
    (26) valor -> . comilla variable comilla
    (27) valor -> . true
    (28) valor -> . false

    numero          shift and go to state 58
    comilla         shift and go to state 59
    true            shift and go to state 65
    false           shift and go to state 66

    valor                          shift and go to state 115

state 102

    (20) definir -> DEFINIR inicioParentesis varTipo variable finParentesis . finLinea

    finLinea        shift and go to state 116


state 103

    (33) reservadas -> ESP inicioParentesis numero finParentesis finLinea .

    comLinea        reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    comBloque       reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    saltoLinea      reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    DEF             reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    DEFINIR         reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    variable        reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    ADEL            reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    ATR             reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    IZQ             reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    DER             reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    ESP             reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    STOP            reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    IF              reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    WHILE           reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    FUNC            reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    PROGFIN         reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)
    END             reduce using rule 33 (reservadas -> ESP inicioParentesis numero finParentesis finLinea .)


state 104

    (44) if -> IF predicado BEGIN cuerpo END . else
    (45) else -> . ELSE BEGIN cuerpo END
    (46) else -> . empty
    (54) empty -> .

    ELSE            shift and go to state 118
    comLinea        reduce using rule 54 (empty -> .)
    comBloque       reduce using rule 54 (empty -> .)
    saltoLinea      reduce using rule 54 (empty -> .)
    DEF             reduce using rule 54 (empty -> .)
    DEFINIR         reduce using rule 54 (empty -> .)
    variable        reduce using rule 54 (empty -> .)
    ADEL            reduce using rule 54 (empty -> .)
    ATR             reduce using rule 54 (empty -> .)
    IZQ             reduce using rule 54 (empty -> .)
    DER             reduce using rule 54 (empty -> .)
    ESP             reduce using rule 54 (empty -> .)
    STOP            reduce using rule 54 (empty -> .)
    IF              reduce using rule 54 (empty -> .)
    WHILE           reduce using rule 54 (empty -> .)
    FUNC            reduce using rule 54 (empty -> .)
    PROGFIN         reduce using rule 54 (empty -> .)
    END             reduce using rule 54 (empty -> .)

    else                           shift and go to state 117
    empty                          shift and go to state 119

state 105

    (41) predicado -> inicioParentesis predicado operadorLog predicado . finParentesis

    finParentesis   shift and go to state 120


state 106

    (47) while -> WHILE predicado BEGIN cuerpo END .

    comLinea        reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    comBloque       reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    saltoLinea      reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    DEF             reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    DEFINIR         reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    variable        reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    ADEL            reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    ATR             reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    IZQ             reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    DER             reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    ESP             reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    STOP            reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    IF              reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    WHILE           reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    FUNC            reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    PROGFIN         reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)
    END             reduce using rule 47 (while -> WHILE predicado BEGIN cuerpo END .)


state 107

    (48) funcion -> FUNC inicioParentesis parametros finParentesis retorno . finLinea

    finLinea        shift and go to state 121


state 108

    (49) retorno -> dosPuntos . varTipo
    (21) varTipo -> . int
    (22) varTipo -> . float
    (23) varTipo -> . string
    (24) varTipo -> . bool

    int             shift and go to state 69
    float           shift and go to state 70
    string          shift and go to state 71
    bool            shift and go to state 72

    varTipo                        shift and go to state 122

state 109

    (50) retorno -> empty .

    finLinea        reduce using rule 50 (retorno -> empty .)


state 110

    (51) parametros -> varTipo dosPuntos variable .
    (52) parametros -> varTipo dosPuntos variable . coma parametros

    finParentesis   reduce using rule 51 (parametros -> varTipo dosPuntos variable .)
    coma            shift and go to state 123


state 111

    (18) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable . comilla finParentesis finLinea

    comilla         shift and go to state 124


state 112

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo . finParentesis finLinea

    finParentesis   shift and go to state 125


state 113

    (16) pinTipo -> SAL .

    finParentesis   reduce using rule 16 (pinTipo -> SAL .)


state 114

    (17) pinTipo -> ENT .

    finParentesis   reduce using rule 17 (pinTipo -> ENT .)


state 115

    (19) definir -> DEFINIR inicioParentesis varTipo variable asig valor . finParentesis finLinea

    finParentesis   shift and go to state 126


state 116

    (20) definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .

    comLinea        reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    comBloque       reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    saltoLinea      reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    DEF             reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    DEFINIR         reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    variable        reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    ADEL            reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    ATR             reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    IZQ             reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    DER             reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    ESP             reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    STOP            reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    IF              reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    WHILE           reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    FUNC            reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    PROGFIN         reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)
    END             reduce using rule 20 (definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea .)


state 117

    (44) if -> IF predicado BEGIN cuerpo END else .

    comLinea        reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    comBloque       reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    saltoLinea      reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    DEF             reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    DEFINIR         reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    variable        reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    ADEL            reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    ATR             reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    IZQ             reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    DER             reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    ESP             reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    STOP            reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    IF              reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    WHILE           reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    FUNC            reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    PROGFIN         reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)
    END             reduce using rule 44 (if -> IF predicado BEGIN cuerpo END else .)


state 118

    (45) else -> ELSE . BEGIN cuerpo END

    BEGIN           shift and go to state 127


state 119

    (46) else -> empty .

    comLinea        reduce using rule 46 (else -> empty .)
    comBloque       reduce using rule 46 (else -> empty .)
    saltoLinea      reduce using rule 46 (else -> empty .)
    DEF             reduce using rule 46 (else -> empty .)
    DEFINIR         reduce using rule 46 (else -> empty .)
    variable        reduce using rule 46 (else -> empty .)
    ADEL            reduce using rule 46 (else -> empty .)
    ATR             reduce using rule 46 (else -> empty .)
    IZQ             reduce using rule 46 (else -> empty .)
    DER             reduce using rule 46 (else -> empty .)
    ESP             reduce using rule 46 (else -> empty .)
    STOP            reduce using rule 46 (else -> empty .)
    IF              reduce using rule 46 (else -> empty .)
    WHILE           reduce using rule 46 (else -> empty .)
    FUNC            reduce using rule 46 (else -> empty .)
    PROGFIN         reduce using rule 46 (else -> empty .)
    END             reduce using rule 46 (else -> empty .)


state 120

    (41) predicado -> inicioParentesis predicado operadorLog predicado finParentesis .

    BEGIN           reduce using rule 41 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)
    AND             reduce using rule 41 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)
    OR              reduce using rule 41 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)
    finParentesis   reduce using rule 41 (predicado -> inicioParentesis predicado operadorLog predicado finParentesis .)


state 121

    (48) funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .

    comLinea        reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    comBloque       reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    saltoLinea      reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    DEF             reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    DEFINIR         reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    variable        reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    ADEL            reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    ATR             reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    IZQ             reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    DER             reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    ESP             reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    STOP            reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    IF              reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    WHILE           reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    FUNC            reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    PROGFIN         reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)
    END             reduce using rule 48 (funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea .)


state 122

    (49) retorno -> dosPuntos varTipo .

    finLinea        reduce using rule 49 (retorno -> dosPuntos varTipo .)


state 123

    (52) parametros -> varTipo dosPuntos variable coma . parametros
    (51) parametros -> . varTipo dosPuntos variable
    (52) parametros -> . varTipo dosPuntos variable coma parametros
    (53) parametros -> . empty
    (21) varTipo -> . int
    (22) varTipo -> . float
    (23) varTipo -> . string
    (24) varTipo -> . bool
    (54) empty -> .

    int             shift and go to state 69
    float           shift and go to state 70
    string          shift and go to state 71
    bool            shift and go to state 72
    finParentesis   reduce using rule 54 (empty -> .)

    varTipo                        shift and go to state 81
    parametros                     shift and go to state 128
    empty                          shift and go to state 82

state 124

    (18) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla . finParentesis finLinea

    finParentesis   shift and go to state 129


state 125

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis . finLinea

    finLinea        shift and go to state 130


state 126

    (19) definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis . finLinea

    finLinea        shift and go to state 131


state 127

    (45) else -> ELSE BEGIN . cuerpo END
    (4) cuerpo -> . pin cuerpo
    (5) cuerpo -> . definir cuerpo
    (6) cuerpo -> . asignar cuerpo
    (7) cuerpo -> . comLinea cuerpo
    (8) cuerpo -> . comBloque cuerpo
    (9) cuerpo -> . saltoLinea cuerpo
    (10) cuerpo -> . reservadas cuerpo
    (11) cuerpo -> . if cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . empty
    (15) pin -> . DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea
    (19) definir -> . DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea
    (20) definir -> . DEFINIR inicioParentesis varTipo variable finParentesis finLinea
    (35) asignar -> . variable asig valor finLinea
    (36) asignar -> . variable asig variable finLinea
    (29) reservadas -> . ADEL finFuncion
    (30) reservadas -> . ATR finFuncion
    (31) reservadas -> . IZQ finFuncion
    (32) reservadas -> . DER finFuncion
    (33) reservadas -> . ESP inicioParentesis numero finParentesis finLinea
    (34) reservadas -> . STOP finFuncion
    (44) if -> . IF predicado BEGIN cuerpo END else
    (47) while -> . WHILE predicado BEGIN cuerpo END
    (48) funcion -> . FUNC inicioParentesis parametros finParentesis retorno finLinea
    (54) empty -> .

    comLinea        shift and go to state 11
    comBloque       shift and go to state 12
    saltoLinea      shift and go to state 13
    DEF             shift and go to state 19
    DEFINIR         shift and go to state 20
    variable        shift and go to state 7
    ADEL            shift and go to state 21
    ATR             shift and go to state 22
    IZQ             shift and go to state 23
    DER             shift and go to state 24
    ESP             shift and go to state 25
    STOP            shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FUNC            shift and go to state 29
    END             reduce using rule 54 (empty -> .)

    cuerpo                         shift and go to state 132
    pin                            shift and go to state 8
    definir                        shift and go to state 9
    asignar                        shift and go to state 10
    reservadas                     shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    funcion                        shift and go to state 17
    empty                          shift and go to state 18

state 128

    (52) parametros -> varTipo dosPuntos variable coma parametros .

    finParentesis   reduce using rule 52 (parametros -> varTipo dosPuntos variable coma parametros .)


state 129

    (18) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis . finLinea

    finLinea        shift and go to state 133


state 130

    (15) pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .

    comLinea        reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    comBloque       reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    saltoLinea      reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    DEF             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    DEFINIR         reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    variable        reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    ADEL            reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    ATR             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    IZQ             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    DER             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    ESP             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    STOP            reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    IF              reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    WHILE           reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    FUNC            reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    PROGFIN         reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)
    END             reduce using rule 15 (pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea .)


state 131

    (19) definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .

    comLinea        reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    comBloque       reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    saltoLinea      reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    DEF             reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    DEFINIR         reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    variable        reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    ADEL            reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    ATR             reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    IZQ             reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    DER             reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    ESP             reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    STOP            reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    IF              reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    WHILE           reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    FUNC            reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    PROGFIN         reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)
    END             reduce using rule 19 (definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea .)


state 132

    (45) else -> ELSE BEGIN cuerpo . END

    END             shift and go to state 134


state 133

    (18) incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .

    INCLUIR         reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    comLinea        reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    comBloque       reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    saltoLinea      reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    DEF             reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    DEFINIR         reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    variable        reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    ADEL            reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    ATR             reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    IZQ             reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    DER             reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    ESP             reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    STOP            reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    IF              reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    WHILE           reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    FUNC            reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)
    PROGFIN         reduce using rule 18 (incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea .)


state 134

    (45) else -> ELSE BEGIN cuerpo END .

    comLinea        reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    comBloque       reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    saltoLinea      reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    DEF             reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    DEFINIR         reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    variable        reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    ADEL            reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    ATR             reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    IZQ             reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    DER             reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    ESP             reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    STOP            reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    IF              reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    WHILE           reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    FUNC            reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    PROGFIN         reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)
    END             reduce using rule 45 (else -> ELSE BEGIN cuerpo END .)

