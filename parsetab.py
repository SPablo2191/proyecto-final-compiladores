
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADEL AND ATR BEGIN DEF DEFINIR DER ELSE END ENT ESP FUNC IF INCLUIR IZQ OR PIN PROGFIN PROGINI SAL STOP WHILE asig bool comBloque comLinea coma comilla dosPuntos false finLinea finParentesis float inicioParentesis int numero operadorAr operadorComp saltoLinea string true variables : PROGINI programa PROGFINprograma : incluir programa\n              | cuerpocuerpo :   pin cuerpo\n              | definir cuerpo\n              | asignar cuerpo\n              | comLinea cuerpo\n              | comBloque cuerpo\n              | saltoLinea cuerpo\n              | reservadas cuerpo\n              | if cuerpo\n              | while cuerpo\n              | funcion cuerpo\n              | emptypin : DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLineapinTipo : SAL \n             | ENTincluir : INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLineadefinir  : DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea \n              | DEFINIR inicioParentesis varTipo variable finParentesis finLinea \n              varTipo : int \n          | float \n          | string \n          | boolvalor : numero\n            | comilla variable comilla\n            | true\n            | false reservadas : ADEL finFuncion\n                | ATR finFuncion\n                | IZQ finFuncion\n                | DER finFuncion\n                | ESP inicioParentesis numero finParentesis finLinea\n                | STOP finFuncionasignar : variable asig valor finLinea\n              | variable asig variable finLineafinFuncion : inicioParentesis finParentesis finLineapredicado : false \n                | true \n                | valor operadorComp valor \n                | inicioParentesis predicado operadorLog predicado finParentesisoperadorLog : AND\n                  | ORif : IF predicado BEGIN cuerpo END elseelse : ELSE BEGIN cuerpo END\n          | emptywhile : WHILE predicado BEGIN cuerpo ENDfuncion : FUNC inicioParentesis parametros finParentesis retorno finLinearetorno : dosPuntos varTipo \n              | emptyparametros : varTipo dosPuntos variable \n                | varTipo dosPuntos variable coma parametros\n                | emptyempty :'
    
_lr_action_items = {'PROGINI':([0,],[2,]),'$end':([1,30,],[0,-1,]),'INCLUIR':([2,4,133,],[6,6,-18,]),'comLinea':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[11,11,11,11,11,11,11,11,11,11,11,11,-29,-30,-31,-32,-34,11,11,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,11,-15,-19,-18,-45,]),'comBloque':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[12,12,12,12,12,12,12,12,12,12,12,12,-29,-30,-31,-32,-34,12,12,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,12,-15,-19,-18,-45,]),'saltoLinea':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[13,13,13,13,13,13,13,13,13,13,13,13,-29,-30,-31,-32,-34,13,13,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,13,-15,-19,-18,-45,]),'DEF':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[19,19,19,19,19,19,19,19,19,19,19,19,-29,-30,-31,-32,-34,19,19,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,19,-15,-19,-18,-45,]),'DEFINIR':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[20,20,20,20,20,20,20,20,20,20,20,20,-29,-30,-31,-32,-34,20,20,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,20,-15,-19,-18,-45,]),'variable':([2,4,8,9,10,11,12,13,14,15,16,17,33,46,48,49,50,52,59,62,67,68,69,70,71,72,75,79,84,85,88,98,99,103,104,106,116,117,119,121,127,130,131,133,134,],[7,7,7,7,7,7,7,7,7,7,7,7,63,-29,-30,-31,-32,-34,78,83,86,87,-21,-22,-23,-24,7,7,-36,-35,-37,110,111,-33,-54,-47,-20,-44,-46,-48,7,-15,-19,-18,-45,]),'ADEL':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[21,21,21,21,21,21,21,21,21,21,21,21,-29,-30,-31,-32,-34,21,21,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,21,-15,-19,-18,-45,]),'ATR':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[22,22,22,22,22,22,22,22,22,22,22,22,-29,-30,-31,-32,-34,22,22,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,22,-15,-19,-18,-45,]),'IZQ':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[23,23,23,23,23,23,23,23,23,23,23,23,-29,-30,-31,-32,-34,23,23,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,23,-15,-19,-18,-45,]),'DER':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[24,24,24,24,24,24,24,24,24,24,24,24,-29,-30,-31,-32,-34,24,24,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,24,-15,-19,-18,-45,]),'ESP':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[25,25,25,25,25,25,25,25,25,25,25,25,-29,-30,-31,-32,-34,25,25,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,25,-15,-19,-18,-45,]),'STOP':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[26,26,26,26,26,26,26,26,26,26,26,26,-29,-30,-31,-32,-34,26,26,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,26,-15,-19,-18,-45,]),'IF':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[27,27,27,27,27,27,27,27,27,27,27,27,-29,-30,-31,-32,-34,27,27,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,27,-15,-19,-18,-45,]),'WHILE':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[28,28,28,28,28,28,28,28,28,28,28,28,-29,-30,-31,-32,-34,28,28,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,28,-15,-19,-18,-45,]),'FUNC':([2,4,8,9,10,11,12,13,14,15,16,17,46,48,49,50,52,75,79,84,85,88,103,104,106,116,117,119,121,127,130,131,133,134,],[29,29,29,29,29,29,29,29,29,29,29,29,-29,-30,-31,-32,-34,29,29,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,29,-15,-19,-18,-45,]),'PROGFIN':([2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,31,34,35,36,37,38,39,40,41,42,43,46,48,49,50,52,84,85,88,103,104,106,116,117,119,121,130,131,133,134,],[-54,30,-54,-3,-54,-54,-54,-54,-54,-54,-54,-54,-54,-54,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-29,-30,-31,-32,-34,-36,-35,-37,-33,-54,-47,-20,-44,-46,-48,-15,-19,-18,-45,]),'inicioParentesis':([6,20,21,22,23,24,25,26,27,28,29,44,57,92,93,94,],[32,45,47,47,47,47,51,47,57,57,61,67,57,57,-42,-43,]),'asig':([7,87,],[33,101,]),'END':([8,9,10,11,12,13,14,15,16,17,18,34,35,36,37,38,39,40,41,42,43,46,48,49,50,52,75,79,84,85,88,90,96,103,104,106,116,117,119,121,127,130,131,132,134,],[-54,-54,-54,-54,-54,-54,-54,-54,-54,-54,-14,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-29,-30,-31,-32,-34,-54,-54,-36,-35,-37,104,106,-33,-54,-47,-20,-44,-46,-48,-54,-15,-19,134,-45,]),'PIN':([19,],[44,]),'false':([27,28,33,57,76,92,93,94,101,],[54,54,66,54,66,54,-42,-43,66,]),'true':([27,28,33,57,76,92,93,94,101,],[55,55,65,55,65,55,-42,-43,65,]),'numero':([27,28,33,51,57,76,92,93,94,101,],[58,58,58,74,58,58,58,-42,-43,58,]),'comilla':([27,28,32,33,57,76,78,92,93,94,101,111,],[59,59,62,59,59,59,95,59,-42,-43,59,124,]),'int':([45,61,108,123,],[69,69,69,69,]),'float':([45,61,108,123,],[70,70,70,70,]),'string':([45,61,108,123,],[71,71,71,71,]),'bool':([45,61,108,123,],[72,72,72,72,]),'finParentesis':([47,54,55,58,61,65,66,74,80,82,87,91,95,105,110,112,113,114,115,120,123,124,128,],[73,-38,-39,-25,-54,-27,-28,89,97,-53,102,-40,-26,120,-51,125,-16,-17,126,-41,-54,129,-52,]),'BEGIN':([53,54,55,58,60,65,66,91,95,118,120,],[75,-38,-39,-25,79,-27,-28,-40,-26,127,-41,]),'AND':([54,55,58,65,66,77,91,95,120,],[-38,-39,-25,-27,-28,93,-40,-26,-41,]),'OR':([54,55,58,65,66,77,91,95,120,],[-38,-39,-25,-27,-28,94,-40,-26,-41,]),'operadorComp':([54,55,56,58,95,],[-28,-27,76,-25,-26,]),'finLinea':([58,63,64,65,66,69,70,71,72,73,83,89,95,97,102,107,109,122,125,126,129,],[-25,84,85,-27,-28,-21,-22,-23,-24,88,99,103,-26,-54,116,121,-50,-49,130,131,133,]),'dosPuntos':([69,70,71,72,81,86,97,],[-21,-22,-23,-24,98,100,108,]),'SAL':([100,],[113,]),'ENT':([100,],[114,]),'ELSE':([104,],[118,]),'coma':([110,],[123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'programa':([2,4,],[3,31,]),'incluir':([2,4,],[4,4,]),'cuerpo':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[5,5,34,35,36,37,38,39,40,41,42,43,90,96,132,]),'pin':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'definir':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'asignar':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'reservadas':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'if':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'funcion':([2,4,8,9,10,11,12,13,14,15,16,17,75,79,127,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'empty':([2,4,8,9,10,11,12,13,14,15,16,17,61,75,79,97,104,123,127,],[18,18,18,18,18,18,18,18,18,18,18,18,82,18,18,109,119,82,18,]),'finFuncion':([21,22,23,24,26,],[46,48,49,50,52,]),'predicado':([27,28,57,92,],[53,60,77,105,]),'valor':([27,28,33,57,76,92,101,],[56,56,64,56,91,56,115,]),'varTipo':([45,61,108,123,],[68,81,122,81,]),'parametros':([61,123,],[80,128,]),'operadorLog':([77,],[92,]),'retorno':([97,],[107,]),'pinTipo':([100,],[112,]),'else':([104,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> PROGINI programa PROGFIN','s',3,'p_start','analizadorSintactico.py',9),
  ('programa -> incluir programa','programa',2,'p_programa','analizadorSintactico.py',13),
  ('programa -> cuerpo','programa',1,'p_programa','analizadorSintactico.py',14),
  ('cuerpo -> pin cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',18),
  ('cuerpo -> definir cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',19),
  ('cuerpo -> asignar cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',20),
  ('cuerpo -> comLinea cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',21),
  ('cuerpo -> comBloque cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',22),
  ('cuerpo -> saltoLinea cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',23),
  ('cuerpo -> reservadas cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',24),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',25),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',26),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',27),
  ('cuerpo -> empty','cuerpo',1,'p_cuerpo','analizadorSintactico.py',28),
  ('pin -> DEF PIN inicioParentesis variable dosPuntos pinTipo finParentesis finLinea','pin',8,'p_pin','analizadorSintactico.py',32),
  ('pinTipo -> SAL','pinTipo',1,'p_pinTipo','analizadorSintactico.py',43),
  ('pinTipo -> ENT','pinTipo',1,'p_pinTipo','analizadorSintactico.py',44),
  ('incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea','incluir',9,'p_incluir','analizadorSintactico.py',48),
  ('definir -> DEFINIR inicioParentesis varTipo variable asig valor finParentesis finLinea','definir',8,'p_definir','analizadorSintactico.py',56),
  ('definir -> DEFINIR inicioParentesis varTipo variable finParentesis finLinea','definir',6,'p_definir','analizadorSintactico.py',57),
  ('varTipo -> int','varTipo',1,'p_varTipo','analizadorSintactico.py',63),
  ('varTipo -> float','varTipo',1,'p_varTipo','analizadorSintactico.py',64),
  ('varTipo -> string','varTipo',1,'p_varTipo','analizadorSintactico.py',65),
  ('varTipo -> bool','varTipo',1,'p_varTipo','analizadorSintactico.py',66),
  ('valor -> numero','valor',1,'p_valor','analizadorSintactico.py',70),
  ('valor -> comilla variable comilla','valor',3,'p_valor','analizadorSintactico.py',71),
  ('valor -> true','valor',1,'p_valor','analizadorSintactico.py',72),
  ('valor -> false','valor',1,'p_valor','analizadorSintactico.py',73),
  ('reservadas -> ADEL finFuncion','reservadas',2,'p_reservadas','analizadorSintactico.py',76),
  ('reservadas -> ATR finFuncion','reservadas',2,'p_reservadas','analizadorSintactico.py',77),
  ('reservadas -> IZQ finFuncion','reservadas',2,'p_reservadas','analizadorSintactico.py',78),
  ('reservadas -> DER finFuncion','reservadas',2,'p_reservadas','analizadorSintactico.py',79),
  ('reservadas -> ESP inicioParentesis numero finParentesis finLinea','reservadas',5,'p_reservadas','analizadorSintactico.py',80),
  ('reservadas -> STOP finFuncion','reservadas',2,'p_reservadas','analizadorSintactico.py',81),
  ('asignar -> variable asig valor finLinea','asignar',4,'p_asignar','analizadorSintactico.py',89),
  ('asignar -> variable asig variable finLinea','asignar',4,'p_asignar','analizadorSintactico.py',90),
  ('finFuncion -> inicioParentesis finParentesis finLinea','finFuncion',3,'p_finFuncion','analizadorSintactico.py',95),
  ('predicado -> false','predicado',1,'p_predicado','analizadorSintactico.py',99),
  ('predicado -> true','predicado',1,'p_predicado','analizadorSintactico.py',100),
  ('predicado -> valor operadorComp valor','predicado',3,'p_predicado','analizadorSintactico.py',101),
  ('predicado -> inicioParentesis predicado operadorLog predicado finParentesis','predicado',5,'p_predicado','analizadorSintactico.py',102),
  ('operadorLog -> AND','operadorLog',1,'p_operadorLog','analizadorSintactico.py',105),
  ('operadorLog -> OR','operadorLog',1,'p_operadorLog','analizadorSintactico.py',106),
  ('if -> IF predicado BEGIN cuerpo END else','if',6,'p_if','analizadorSintactico.py',109),
  ('else -> ELSE BEGIN cuerpo END','else',4,'p_else','analizadorSintactico.py',112),
  ('else -> empty','else',1,'p_else','analizadorSintactico.py',113),
  ('while -> WHILE predicado BEGIN cuerpo END','while',5,'p_while','analizadorSintactico.py',116),
  ('funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea','funcion',6,'p_funcion','analizadorSintactico.py',119),
  ('retorno -> dosPuntos varTipo','retorno',2,'p_retorno','analizadorSintactico.py',123),
  ('retorno -> empty','retorno',1,'p_retorno','analizadorSintactico.py',124),
  ('parametros -> varTipo dosPuntos variable','parametros',3,'p_parametros','analizadorSintactico.py',127),
  ('parametros -> varTipo dosPuntos variable coma parametros','parametros',5,'p_parametros','analizadorSintactico.py',128),
  ('parametros -> empty','parametros',1,'p_parametros','analizadorSintactico.py',129),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',132),
]
