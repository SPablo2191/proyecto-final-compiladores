
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADEL AND ATR BEGIN DEF DEFINIR DER ELSE END ENT ESP FUNC IF INCLUIR IZQ OR PIN PROGFIN PROGINI SAL STOP WHILE asig bool comBloque comLinea coma comilla dosPuntos false finLinea finParentesis float inicioParentesis int numero operadorAr operadorComp saltoLinea string true variables : PROGINI programa PROGFINprograma : incluir programa\n              | cuerpocuerpo :   pin cuerpo\n              | definir cuerpo\n              | asignar cuerpo\n              | comLinea cuerpo\n              | comBloque cuerpo\n              | saltoLinea cuerpo\n              | adelante cuerpo\n              | atras cuerpo\n              | izquierda cuerpo\n              | derecha cuerpo\n              | esperar cuerpo\n              | parar cuerpo\n              | if cuerpo\n              | while cuerpo\n              | funcion cuerpo\n              | emptypin : DEF PIN inicioParentesis variable dosPuntos tipoPin finParentesis finLineatipoPin : SAL \n             | ENTincluir : INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLineadefinir : DEFINIR inicioParentesis tipo variable asig valor finParentesis finLinea \n              | DEFINIR inicioParentesis tipo variable finParentesis finLinea \n              tipo : int \n          | float \n          | string \n          | boolvalor : numero\n            | comilla variable comilla\n            | true\n            | falseasignar : variable asig valor finLinea\n              | variable asig variable finLineafinFuncion : inicioParentesis finParentesis finLineaadelante : ADEL finFuncionatras : ATR finFuncionizquierda : IZQ finFuncionderecha : DER finFuncionparar : STOP finFuncionesperar : ESP inicioParentesis numero finParentesis finLineapredicado : false \n                | true \n                | valor operadorComp valor \n                | inicioParentesis predicado operadorLog predicado finParentesis\noperadorLog : AND\n                  | ORif : IF predicado BEGIN cuerpo END elseelse : ELSE BEGIN cuerpo END\n          | emptywhile : WHILE predicado BEGIN cuerpo ENDfuncion : FUNC inicioParentesis parametros finParentesis retorno finLinearetorno : dosPuntos tipo \n              | emptyparametros : tipo dosPuntos variable \n                | tipo dosPuntos variable coma parametros\n                | emptyempty :'
    
_lr_action_items = {'PROGINI':([0,],[2,]),'$end':([1,35,],[0,-1,]),'INCLUIR':([2,4,143,],[6,6,-23,]),'comLinea':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-37,-38,-39,-40,-41,11,11,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,11,-20,-24,-23,-50,]),'comBloque':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-37,-38,-39,-40,-41,12,12,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,12,-20,-24,-23,-50,]),'saltoLinea':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-37,-38,-39,-40,-41,13,13,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,13,-20,-24,-23,-50,]),'DEF':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-37,-38,-39,-40,-41,24,24,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,24,-20,-24,-23,-50,]),'DEFINIR':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-37,-38,-39,-40,-41,25,25,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,25,-20,-24,-23,-50,]),'variable':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,38,56,58,59,60,62,69,72,77,78,79,80,81,82,85,89,94,95,98,108,109,113,114,116,126,127,129,131,137,140,141,143,144,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,73,-37,-38,-39,-40,-41,88,93,96,97,-26,-27,-28,-29,7,7,-35,-34,-36,120,121,-42,-59,-52,-25,-49,-51,-53,7,-20,-24,-23,-50,]),'ADEL':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-37,-38,-39,-40,-41,26,26,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,26,-20,-24,-23,-50,]),'ATR':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-37,-38,-39,-40,-41,27,27,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,27,-20,-24,-23,-50,]),'IZQ':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-37,-38,-39,-40,-41,28,28,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,28,-20,-24,-23,-50,]),'DER':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-37,-38,-39,-40,-41,29,29,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,29,-20,-24,-23,-50,]),'ESP':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-37,-38,-39,-40,-41,30,30,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,30,-20,-24,-23,-50,]),'STOP':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-37,-38,-39,-40,-41,31,31,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,31,-20,-24,-23,-50,]),'IF':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-37,-38,-39,-40,-41,32,32,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,32,-20,-24,-23,-50,]),'WHILE':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-37,-38,-39,-40,-41,33,33,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,33,-20,-24,-23,-50,]),'FUNC':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,56,58,59,60,62,85,89,94,95,98,113,114,116,126,127,129,131,137,140,141,143,144,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-37,-38,-39,-40,-41,34,34,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,34,-20,-24,-23,-50,]),'PROGFIN':([2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,58,59,60,62,94,95,98,113,114,116,126,127,129,131,140,141,143,144,],[-59,35,-59,-3,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-37,-38,-39,-40,-41,-35,-34,-36,-42,-59,-52,-25,-49,-51,-53,-20,-24,-23,-50,]),'inicioParentesis':([6,25,26,27,28,29,30,31,32,33,34,54,67,102,103,104,],[37,55,57,57,57,57,61,57,67,67,71,77,67,67,-47,-48,]),'asig':([7,97,],[38,111,]),'END':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,58,59,60,62,85,89,94,95,98,100,106,113,114,116,126,127,129,131,137,140,141,142,144,],[-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-37,-38,-39,-40,-41,-59,-59,-35,-34,-36,114,116,-42,-59,-52,-25,-49,-51,-53,-59,-20,-24,144,-50,]),'PIN':([24,],[54,]),'false':([32,33,38,67,86,102,103,104,111,],[64,64,76,64,76,64,-47,-48,76,]),'true':([32,33,38,67,86,102,103,104,111,],[65,65,75,65,75,65,-47,-48,75,]),'numero':([32,33,38,61,67,86,102,103,104,111,],[68,68,68,84,68,68,68,-47,-48,68,]),'comilla':([32,33,37,38,67,86,88,102,103,104,111,121,],[69,69,72,69,69,69,105,69,-47,-48,69,134,]),'int':([55,71,118,133,],[79,79,79,79,]),'float':([55,71,118,133,],[80,80,80,80,]),'string':([55,71,118,133,],[81,81,81,81,]),'bool':([55,71,118,133,],[82,82,82,82,]),'finParentesis':([57,64,65,68,71,75,76,84,90,92,97,101,105,115,120,122,123,124,125,130,133,134,138,],[83,-43,-44,-30,-59,-32,-33,99,107,-58,112,-45,-31,130,-56,135,-21,-22,136,-46,-59,139,-57,]),'BEGIN':([63,64,65,68,70,75,76,101,105,128,130,],[85,-43,-44,-30,89,-32,-33,-45,-31,137,-46,]),'AND':([64,65,68,75,76,87,101,105,130,],[-43,-44,-30,-32,-33,103,-45,-31,-46,]),'OR':([64,65,68,75,76,87,101,105,130,],[-43,-44,-30,-32,-33,104,-45,-31,-46,]),'operadorComp':([64,65,66,68,105,],[-33,-32,86,-30,-31,]),'finLinea':([68,73,74,75,76,79,80,81,82,83,93,99,105,107,112,117,119,132,135,136,139,],[-30,94,95,-32,-33,-26,-27,-28,-29,98,109,113,-31,-59,126,131,-55,-54,140,141,143,]),'dosPuntos':([79,80,81,82,91,96,107,],[-26,-27,-28,-29,108,110,118,]),'SAL':([110,],[123,]),'ENT':([110,],[124,]),'ELSE':([114,],[128,]),'coma':([120,],[133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'programa':([2,4,],[3,36,]),'incluir':([2,4,],[4,4,]),'cuerpo':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[5,5,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,100,106,142,]),'pin':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'definir':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'asignar':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'adelante':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'atras':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'izquierda':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'derecha':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'esperar':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'parar':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'if':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'while':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'funcion':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,85,89,137,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'empty':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,71,85,89,107,114,133,137,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,92,23,23,119,129,92,23,]),'finFuncion':([26,27,28,29,31,],[56,58,59,60,62,]),'predicado':([32,33,67,102,],[63,70,87,115,]),'valor':([32,33,38,67,86,102,111,],[66,66,74,66,101,66,125,]),'tipo':([55,71,118,133,],[78,91,132,91,]),'parametros':([71,133,],[90,138,]),'operadorLog':([87,],[102,]),'retorno':([107,],[117,]),'tipoPin':([110,],[122,]),'else':([114,],[127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> PROGINI programa PROGFIN','s',3,'p_start','analizadorSintactico.py',5),
  ('programa -> incluir programa','programa',2,'p_programa','analizadorSintactico.py',8),
  ('programa -> cuerpo','programa',1,'p_programa','analizadorSintactico.py',9),
  ('cuerpo -> pin cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',12),
  ('cuerpo -> definir cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',13),
  ('cuerpo -> asignar cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',14),
  ('cuerpo -> comLinea cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',15),
  ('cuerpo -> comBloque cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',16),
  ('cuerpo -> saltoLinea cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',17),
  ('cuerpo -> adelante cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',18),
  ('cuerpo -> atras cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',19),
  ('cuerpo -> izquierda cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',20),
  ('cuerpo -> derecha cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',21),
  ('cuerpo -> esperar cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',22),
  ('cuerpo -> parar cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',23),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',24),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',25),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','analizadorSintactico.py',26),
  ('cuerpo -> empty','cuerpo',1,'p_cuerpo','analizadorSintactico.py',27),
  ('pin -> DEF PIN inicioParentesis variable dosPuntos tipoPin finParentesis finLinea','pin',8,'p_pin','analizadorSintactico.py',30),
  ('tipoPin -> SAL','tipoPin',1,'p_tipoPin','analizadorSintactico.py',33),
  ('tipoPin -> ENT','tipoPin',1,'p_tipoPin','analizadorSintactico.py',34),
  ('incluir -> INCLUIR inicioParentesis comilla variable finLinea variable comilla finParentesis finLinea','incluir',9,'p_incluir','analizadorSintactico.py',37),
  ('definir -> DEFINIR inicioParentesis tipo variable asig valor finParentesis finLinea','definir',8,'p_definir','analizadorSintactico.py',44),
  ('definir -> DEFINIR inicioParentesis tipo variable finParentesis finLinea','definir',6,'p_definir','analizadorSintactico.py',45),
  ('tipo -> int','tipo',1,'p_tipo','analizadorSintactico.py',49),
  ('tipo -> float','tipo',1,'p_tipo','analizadorSintactico.py',50),
  ('tipo -> string','tipo',1,'p_tipo','analizadorSintactico.py',51),
  ('tipo -> bool','tipo',1,'p_tipo','analizadorSintactico.py',52),
  ('valor -> numero','valor',1,'p_valor','analizadorSintactico.py',55),
  ('valor -> comilla variable comilla','valor',3,'p_valor','analizadorSintactico.py',56),
  ('valor -> true','valor',1,'p_valor','analizadorSintactico.py',57),
  ('valor -> false','valor',1,'p_valor','analizadorSintactico.py',58),
  ('asignar -> variable asig valor finLinea','asignar',4,'p_asignar','analizadorSintactico.py',61),
  ('asignar -> variable asig variable finLinea','asignar',4,'p_asignar','analizadorSintactico.py',62),
  ('finFuncion -> inicioParentesis finParentesis finLinea','finFuncion',3,'p_finFuncion','analizadorSintactico.py',65),
  ('adelante -> ADEL finFuncion','adelante',2,'p_adelante','analizadorSintactico.py',68),
  ('atras -> ATR finFuncion','atras',2,'p_atras','analizadorSintactico.py',71),
  ('izquierda -> IZQ finFuncion','izquierda',2,'p_izquierda','analizadorSintactico.py',74),
  ('derecha -> DER finFuncion','derecha',2,'p_derecha','analizadorSintactico.py',77),
  ('parar -> STOP finFuncion','parar',2,'p_parar','analizadorSintactico.py',80),
  ('esperar -> ESP inicioParentesis numero finParentesis finLinea','esperar',5,'p_esperar','analizadorSintactico.py',83),
  ('predicado -> false','predicado',1,'p_predicado','analizadorSintactico.py',86),
  ('predicado -> true','predicado',1,'p_predicado','analizadorSintactico.py',87),
  ('predicado -> valor operadorComp valor','predicado',3,'p_predicado','analizadorSintactico.py',88),
  ('predicado -> inicioParentesis predicado operadorLog predicado finParentesis','predicado',5,'p_predicado','analizadorSintactico.py',89),
  ('operadorLog -> AND','operadorLog',1,'p_operadorLog','analizadorSintactico.py',93),
  ('operadorLog -> OR','operadorLog',1,'p_operadorLog','analizadorSintactico.py',94),
  ('if -> IF predicado BEGIN cuerpo END else','if',6,'p_if','analizadorSintactico.py',97),
  ('else -> ELSE BEGIN cuerpo END','else',4,'p_else','analizadorSintactico.py',100),
  ('else -> empty','else',1,'p_else','analizadorSintactico.py',101),
  ('while -> WHILE predicado BEGIN cuerpo END','while',5,'p_while','analizadorSintactico.py',104),
  ('funcion -> FUNC inicioParentesis parametros finParentesis retorno finLinea','funcion',6,'p_funcion','analizadorSintactico.py',107),
  ('retorno -> dosPuntos tipo','retorno',2,'p_retorno','analizadorSintactico.py',110),
  ('retorno -> empty','retorno',1,'p_retorno','analizadorSintactico.py',111),
  ('parametros -> tipo dosPuntos variable','parametros',3,'p_parametros','analizadorSintactico.py',114),
  ('parametros -> tipo dosPuntos variable coma parametros','parametros',5,'p_parametros','analizadorSintactico.py',115),
  ('parametros -> empty','parametros',1,'p_parametros','analizadorSintactico.py',116),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',119),
]
